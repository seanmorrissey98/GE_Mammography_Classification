Test TPR: 0.05128205128205128
Test AUC: 0.5063902452039809
def p():
  x = 0.0
  index = 20
  if sum(opposite) / 52 > main[index]:
    x = (x - 0.1)
  return x
XXX_output_XXX = p()


Test TPR: 0.6153846153846154
Test AUC: 0.5647162410950133
def p():
  x = 0.0
  index = 47
  if sum(main) / 52 > sum(opposite) / 52:
    x = (x + 0.0001)
  return x
XXX_output_XXX = p()


Test TPR: 0.6153846153846154
Test AUC: 0.5553509965580725
def p():
  x = 0.0
  index = 44
  if main[index] < 1:
    if opposite[index] > opposite[index] + 0.7:
      x = (x + 0.4)
  else:
    if opposite[index] < main[index] + 2:
      x = (x - 0.00001)
    else:
      x = (x + 0.5)
  index = 27
  if sum(opposite) / 52 > sum(main) / 52:
    x = (x - 0.01)
  index = 20
  if sum(main) / 52 < sum(opposite) / 52:
    x = (x - 0.9)
  return x
XXX_output_XXX = p()


Test TPR: 0.9230769230769231
Test AUC: 0.5302169214760266
def p():
  x = 0.0
  index = 5
  if main[index] < 1:
    if opposite[index] > opposite[index] + 0.1:
      x = (x - 0.01)
  else:
    if opposite[index] > main[index] + 9:
      x = (x - 0.9)
    else:
      x = (x + 0.01)
  index = 10
  if sum(opposite) / 52 < main[index]:
    x = (x + 0.5)
  index = 9
  if opposite[index] < opposite[index]:
    x = (x + 0.001)
  return x
XXX_output_XXX = p()


Test TPR: 0.5641025641025641
Test AUC: 0.531270845006537
def p():
  x = 0.0
  index = 46
  if main[index] < 1:
    if opposite[index] < main[index] + 0.00001:
      x = (x + 0.4)
  else:
    if opposite[index] > opposite[index] + 1:
      x = (x + 1.0)
    else:
      x = (x + 0.000001)
  index = 17
  if main[index] < opposite[index]:
    x = (x + 0.0001)
  index = 45
  if opposite[index] > opposite[index]:
    x = (x - 0.4)
  index = 36
  if opposite[index] < main[index]:
    x = (x + 0.8)
  return x
XXX_output_XXX = p()


Test TPR: 0.7692307692307693
Test AUC: 0.6083406707756344
def p():
  x = 0.0
  index = 6
  if abs(sum(main[-index:]) - sum(opposite[-index:])) > 100:
    x = (x + 0.1)
  index = 42
  if sum(main) / 52 < opposite[index]:
    x = (x - 0.2)
  index = 41
  if main[index] > main[index]:
    x = (x + 0.9)
  index = 47
  if main[index] < opposite[index]:
    x = (x - 0.6)
  index = 44
  if opposite[index] < sum(main) / 52:
    x = (x - 0.01)
  index = 23
  if main[index] < 1:
    if main[index] > opposite[index] + 0.000001:
      x = (x - 0.000001)
  else:
    if main[index] > opposite[index] + 4:
      x = (x + 0.001)
    else:
      x = (x + 0.00001)
  index = 25
  if sum(main) / 52 < main[index]:
    x = (x + 0.0000001)
  index = 25
  if main[index] < sum(main) / 52:
    x = (x + 0.5)
  index = 47
  if sum(opposite) / 52 < opposite[index]:
    x = (x + 0.0001)
  return x
XXX_output_XXX = p()


Test TPR: 0.7435897435897436
Test AUC: 0.5809519997865471
def p():
  x = 0.0
  index = 37
  if abs(sum(main[:-index]) - sum(opposite[-index:])) > 100:
    x = (x + 1.0)
  index = 41
  if main[index] > sum(opposite) / 52:
    x = (x - 0.00001)
  index = 8
  if abs(sum(main) - sum(opposite)) > 5000:
    x = (x + 0.001)
  return x
XXX_output_XXX = p()


Test TPR: 0.9230769230769231
Test AUC: 0.5858880973345073
def p():
  x = 0.0
  index = 46
  if abs(sum(main[-index:]) - sum(opposite[:-index])) > 5000:
    x = (x + 0.6)
  index = 3
  if sum(main) / 52 > main[index]:
    x = (x + 0.1)
  index = 44
  if main[index] - main[index] > main[index] + main[index]:
    x = (x + 0.1)
  index = 24
  if sum(main) / 52 > sum(opposite) / 52:
    x = (x + 0.0000001)
  index = 11
  if sum(main) / 52 < sum(opposite) / 52:
    x = (x - 0.8)
  index = 4
  if main[index] > opposite[index]:
    x = (x - 0.7)
  index = 23
  if main[index] < sum(opposite) / 52:
    x = (x + 0.9)
  index = 46
  if main[index] < 1:
    if opposite[index] > main[index] + 0.01:
      x = (x - 0.9)
  else:
    if opposite[index] > opposite[index] + 0:
      x = (x + 0.5)
    else:
      x = (x + 0.001)
  index = 34
  if main[index] > sum(opposite) / 52:
    x = (x - 0.7)
  index = 50
  if sum(opposite) / 52 < sum(main) / 52:
    x = (x - 0.3)
  index = 0
  if main[index] < 1:
    if main[index] > opposite[index] + 0.00001:
      x = (x - 0.0001)
  else:
    if opposite[index] < opposite[index] + 0:
      x = (x - 0.0000001)
    else:
      x = (x + 0.00001)
  index = 37
  if opposite[index] > sum(main) / 52:
    x = (x + 0.7)
  index = 25
  if main[index] > sum(opposite) / 52:
    x = (x + 0.00001)
  return x
XXX_output_XXX = p()


Test TPR: 0.8205128205128205
Test AUC: 0.5991221750847141
def p():
  x = 0.0
  index = 21
  if main[index] < 1:
    if opposite[index] > main[index] + 0.01:
      x = (x - 0.7)
  else:
    if main[index] > opposite[index] + 6:
      x = (x + 0.7)
    else:
      x = (x - 0.001)
  index = 5
  if abs(sum(main[-index:]) - sum(opposite[-index:])) > 500:
    x = (x + 0.3)
  index = 12
  if sum(opposite) / 52 > sum(main) / 52:
    x = (x - 0.000001)
  return x
XXX_output_XXX = p()


Test TPR: 0.7435897435897436
Test AUC: 0.5799114170602204
def p():
  x = 0.0
  index = 14
  if abs(sum(main) - sum(opposite)) > 5000:
    x = (x + 0.01)
  return x
XXX_output_XXX = p()


