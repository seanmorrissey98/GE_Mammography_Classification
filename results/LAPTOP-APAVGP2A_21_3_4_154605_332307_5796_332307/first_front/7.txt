Generation:
1

Phenotype:
def p():
  x = 0.0
  index = 10
  if abs(sum(main) - sum(opposite)) > 5000:
    x = (x - 0.01)
  index = 15
  if main[index] < opposite[index]:
    x = (x + 0.6)
  index = 32
  if main[index] > main[index]:
    x = (x + 0.9)
  return x
XXX_output_XXX = p()

Genotype:
[95143, 57287, 87433, 23818, 17648, 53179, 6742, 64141, 10626, 92871, 99711, 27550, 97908, 61711, 75142, 78889, 4225, 95020, 99964, 86748, 87090, 58478, 74602, 78158, 46657, 27826, 33345, 64989, 75018, 82811, 46917, 25366, 82724, 52907, 52302, 75882, 55347, 27524, 17364, 63010, 71856, 15312, 62300, 38025, 27878, 23459, 41761, 20178, 50060]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 10)) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 5000) :{:x =  (<expr> (x -  (<decimal> 0.01) )) :})) {::} (<code> (<index> index =  (<n> 15)) {::} (<if> if  (<data> (<point> main[index]))   (<eval> <)   (<data> (<point> opposite[index])) :{:x =  (<expr> (x +  (<decimal> 0.6) )) :})) {::} (<code> (<index> index =  (<n> 32)) {::} (<if> if  (<data> (<point> main[index]))   (<eval> >)   (<data> (<point> main[index])) :{:x =  (<expr> (x +  (<decimal> 0.9) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.3651685393258427, 0.47282242721330087]