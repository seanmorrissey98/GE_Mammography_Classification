Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 33
  n = 44
  b = 32
  c = sum(main[-index:])
  if c > sum(opposite[:-index]):
    x = (x - 0.9)
  index = 49
  n = 24
  b = 23
  c = main[b]
  if opposite[b] > opposite[9] + 8:
    x = (x - 0.1)
  index = 20
  n = 15
  b = 31
  c = opposite[b]
  if c < opposite[b]:
    x = 0.9
  index = 38
  n = 42
  b = 31
  c = main[b]
  if opposite[40] < main[35] + 1:
    x = (x / 0.2)
  return x
XXX_output_XXX = p()

Genotype:
[45423, 35766, 7545, 29899, 29890, 52, 52066, 55359, 1892, 97892, 24853, 16754, 9903, 82210, 96948, 60110, 4943, 34397, 22194, 98361, 85740, 95207, 84794, 85648, 41930, 51933, 13927, 6420, 60002, 24370, 88376, 97149, 5539, 36088, 85864, 40693, 32059, 23734, 72336, 51482, 94009, 41013, 38002, 86458, 74859, 71915, 79719, 5375, 81934, 98969, 77697, 36181, 65978, 66827, 98701, 18921, 6681, 61637, 39397, 40481, 91983, 29528, 74367, 42151, 79014, 52800, 84160, 61326, 25198, 14962, 31058, 94696, 54085, 51365, 66509, 47919, 89199, 84187, 85801, 29063, 4293, 70357, 14833, 29936, 90745, 27146, 26293, 17769, 58878, 90542, 93275, 5336, 78648, 98892, 59433, 43601, 27956, 45893, 40760, 79979, 81015, 35140, 69774, 75642, 20227, 76966, 42549, 325]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 33)) {::} (<a> n =  (<n> 44)) {::} (<b> b =  (<n> 32)) {::} (<c> c =  (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))) {::} (<if> if c  (<eval> >)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index])))) :{:x =  (<expr> (x -  (<const> 0.9) )) :}) {::} (<code> (<index> index =  (<n> 49)) {::} (<a> n =  (<n> 24)) {::} (<b> b =  (<n> 23)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> opposite[b])  >  (<point> opposite[ (<n> 9) ])  +  (<d> 8) :{:x =  (<expr> (x -  (<const> 0.1) )) :})) {::} (<code> (<index> index =  (<n> 20)) {::} (<a> n =  (<n> 15)) {::} (<b> b =  (<n> 31)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if c  (<eval> <)   (<data> (<point> opposite[b])) :{:x =  (<expr> (<const> 0.9)) :})) {::} (<code> (<index> index =  (<n> 38)) {::} (<a> n =  (<n> 42)) {::} (<b> b =  (<n> 31)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> opposite[ (<n> 40) ])  <  (<point> main[ (<n> 35) ])  +  (<d> 1) :{:x =  (<expr> (x /  (<const> 0.2) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.056179775280898875, 0.48922571595764386]