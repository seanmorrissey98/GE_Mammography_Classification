Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 7
  n = 47
  b = 39
  c = sum(opposite[-index:])
  if c > opposite[b] * main[b] + main[b] * opposite[b]:
    x = (x - 0.1)
  index = 41
  n = 35
  b = 14
  c = main[25]
  if c < sum(main[:-index]):
    x = (x + 0.7)
  index = 39
  n = 33
  b = 0
  c = sum(main[-index:])
  if abs(sum(main) - sum(opposite)) > 5000:
    x = (x + 1.0)
  index = 4
  n = 1
  b = 40
  c = main[b]
  if c > opposite[b]:
    x = (x + 0.7)
  index = 41
  n = 49
  b = 17
  c = opposite[b]
  if opposite[b] > main[b]:
    x = (x / 0.4)
  index = 46
  n = 33
  b = 27
  c = main[b]
  if c > main[b]:
    x = (x - 0.8)
  index = 25
  n = 48
  b = 42
  c = main[b]
  if main[b] < opposite[33] + 0:
    x = (x + 0.7)
  index = 49
  n = 27
  b = 10
  c = sum(opposite[:-index])
  if abs(sum(main) - sum(opposite)) > 5000:
    x = (x / 0.8)
  index = 30
  n = 40
  b = 5
  c = opposite[b]
  if opposite[b] > opposite[b] + 1:
    x = 0.4
  index = 49
  n = 4
  b = 37
  c = opposite[b]
  if c < main[b]:
    x = (x / 0.1)
  index = 31
  n = 41
  b = 41
  c = opposite[20]
  if main[b] > sum(main[-index:]):
    x = (x + 0.4)
  index = 5
  n = 36
  b = 9
  c = opposite[b]
  if abs(sum(main[:-index]) - sum(opposite[:-index])) > 100:
    x = (x + 0.1)
  index = 42
  n = 50
  b = 18
  c = main[b] - main[b]
  if opposite[b] > opposite[b] + 5:
    x = (x + 0.7)
  index = 34
  n = 16
  b = 34
  c = main[14]
  if abs(sum(main) - sum(opposite)) > 5000:
    x = (x * 0.6)
  index = 7
  n = 17
  b = 46
  c = main[b]
  if opposite[b] < opposite[b]:
    x = (x / 0.3)
  index = 26
  n = 26
  b = 4
  c = sum(opposite[-index:])
  if c < sum(opposite[:-index]):
    x = (x / 1.0)
  index = 44
  n = 11
  b = 23
  c = opposite[b]
  if main[b] < main[b]:
    x = (x / 1.0)
  index = 2
  n = 19
  b = 23
  c = sum(opposite[-index:])
  if opposite[32] > opposite[b] + 8:
    x = (x - 0.7)
  index = 0
  n = 36
  b = 26
  c = opposite[b]
  if main[28] < main[28] + 7:
    x = (x - 0.6)
  index = 23
  n = 6
  b = 27
  c = main[b]
  if opposite[b] < opposite[b]:
    x = 0.5
  index = 1
  n = 23
  b = 29
  c = main[b]
  if main[b] < main[b]:
    x = (x + 0.8)
  return x
XXX_output_XXX = p()

Genotype:
[77766, 7524, 9303, 25689, 50911, 70234, 74813, 15198, 30938, 53662, 2197, 84862, 95393, 2912, 37258, 44767, 41980, 72, 15943, 64963, 89395, 4884, 10733, 43695, 19236, 40218, 68471, 76955, 39366, 35891, 72854, 41795, 12190, 75076, 87900, 30053, 33147, 43896, 91025, 42650, 95481, 29082, 24362, 5467, 27423, 33712, 47840, 68957, 1073, 16612, 81004, 26222, 78255, 85944, 40158, 35531, 35521, 37801, 60179, 89806, 14982, 67542, 82553, 98755, 1840, 87860, 68308, 34795, 86082, 67885, 79522, 85750, 7215, 38554, 57729, 65304, 6521, 14201, 74016, 22890, 90449, 25642, 14149, 77184, 29256, 51430, 88584, 63399, 56392, 27201, 36937, 88180, 90908, 91863, 1039, 20209, 66052, 62560, 34869, 26789, 75151, 96874, 54017, 3420, 70717, 99929, 42116, 81807, 19974, 4197, 92656, 15607, 89432, 64847, 14191, 45021, 39708, 9192, 16187, 31751, 55009, 93034, 28907, 97591, 4182, 97746, 96626, 76960, 31557, 48096, 38536, 50089, 90163, 37919, 43102, 82655, 79757, 70851, 38500, 48092, 42806, 25006, 23108, 27926, 55154, 47563, 5657, 55915, 83622, 59320, 26761, 61408, 24223, 16421, 37567, 41403, 80606, 74090, 59048, 24095, 27766, 34634, 5891, 50826, 44812, 88579, 51205, 72436, 62589, 4134, 54611, 81055, 5540, 80972, 51397, 16968, 71325, 88864, 11541, 31885, 27446, 3616, 58131, 31827, 73181, 75191, 8873, 39367, 12999, 81313, 68768, 58369, 95293, 22170, 84301, 11677, 31930, 81705, 5252, 78144, 71679, 72854, 18976, 34762, 14022, 56245, 1441, 2600, 40352, 34871, 3041, 23076, 77000, 24083, 96778, 21607, 60788, 35276, 43136, 97726, 77788, 96709, 201, 26095, 88355, 31938, 34127, 25379, 90524, 36541, 99558, 24979, 78786, 40941, 785, 86593, 17290, 61195, 47479, 20107, 51338, 68329, 72303, 89328, 14952, 40154, 70728, 57019, 84599, 25499, 30466, 33478, 80466, 28193, 46837, 62253, 23788, 12856, 5056, 18530, 14765, 36329, 72804, 34925, 14863, 51484, 90605, 73214, 77362, 50007, 34133, 52103, 22972, 64681, 86966, 74577, 76400, 8750, 73722, 7715, 99509, 67335, 5234, 47335, 64297, 72388, 84071, 85176, 22411, 81037, 21689, 47496, 58183, 73350, 10947, 47478, 73889, 80206, 35837, 85828, 56596, 56389, 23537, 18793, 16149, 795, 29528, 98320, 66022, 46569, 96378, 10953, 67888, 8176, 58852, 79256, 11704, 44225, 64721, 27980, 19053, 37653, 4004, 58889, 70443, 13898, 33262, 39955, 88360, 2316, 16373, 91798, 5860, 72977, 22731, 45775, 42279, 19714, 46363, 80969, 2569, 72985, 79240, 73852, 88711, 43682, 87899, 8926, 33361, 11967, 57513, 49609, 97538, 84535, 94360, 76228, 9122, 50652, 51486, 91177, 16378, 22083, 62073, 78751, 63427, 48142, 75841, 69212, 43184, 39367, 11145, 87068, 77502, 74961, 57929, 38047, 28789, 75400, 59999, 81420, 91796, 18033, 47475, 81410, 44931, 95822, 79724, 65093, 23053, 71578, 14243, 3276, 87277, 94317, 20436, 15747, 55497, 92743, 80710, 33711, 42007, 99840, 55550, 89660, 53179, 51975, 73070, 72041, 54657, 55644, 26506, 11438, 19418, 93984, 42482, 22869, 33501, 7194, 90092, 58433, 3630, 71201, 14255, 10637, 59789, 32144, 39545, 25075, 48387, 21380, 34406, 60588, 7041, 16199, 44766, 6808, 41697, 44653, 6807, 70458, 43128, 29306, 97903, 36246, 87295, 688, 59848, 63208, 48, 22904, 2591, 48698, 33991, 5819, 59867, 25043, 44379, 29355, 12774, 87063, 90628, 19647, 42386, 46532, 48031, 14683, 15616, 97297, 40732, 41963, 99307, 69431, 68280, 19466, 77744, 16160, 45219, 55283, 23844, 58127, 606, 68391, 57228, 63000, 83876, 70021, 42684, 64154, 88108, 43829, 65831, 22679, 3394, 52439, 65740, 74741, 28390, 62658, 83197, 8912, 60433, 89919, 29458, 24853, 94274, 20725, 20668, 51074, 76677, 39310, 10250, 75818, 15221, 35286, 98494, 48075, 23160, 84202, 67520, 94850, 65913, 89424, 41396, 82181, 90601, 43219, 64908, 56088, 23726, 19872, 93156, 15601, 77140, 16368, 37290, 12025, 86964, 48680, 65179, 43511, 28003, 48852, 85272, 56346, 69848, 61981, 6344, 89025, 51008, 90178, 74714, 9051, 39259, 33427, 83577, 23459, 56898, 48203, 69446, 17971, 64242, 36283, 51892, 35500, 50636, 67729, 14584, 43562, 65304, 27338, 532, 96472, 14867, 48716, 30452, 19533]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 7)) {::} (<a> n =  (<n> 47)) {::} (<b> b =  (<n> 39)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))) {::} (<if> if c  (<eval> >)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[b]))   (<combine> *)   (<data> (<point> main[b]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[b]))   (<combine> *)   (<data> (<point> opposite[b])))))) :{:x =  (<expr> (x -  (<const> 0.1) )) :}) {::} (<code> (<index> index =  (<n> 41)) {::} (<a> n =  (<n> 35)) {::} (<b> b =  (<n> 14)) {::} (<c> c =  (<data> (<point> main[ (<n> 25) ]))) {::} (<if> if c  (<eval> <)   (<data> (<n_avg> (<mainPartial> sum(main[:-index])))) :{:x =  (<expr> (x +  (<const> 0.7) )) :}) {::} (<code> (<index> index =  (<n> 39)) {::} (<a> n =  (<n> 33)) {::} (<b> b =  (<n> 0)) {::} (<c> c =  (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 5000) :{:x =  (<expr> (x +  (<const> 1.0) )) :})) {::} (<code> (<index> index =  (<n> 4)) {::} (<a> n =  (<n> 1)) {::} (<b> b =  (<n> 40)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if c  (<eval> >)   (<data> (<point> opposite[b])) :{:x =  (<expr> (x +  (<const> 0.7) )) :}) {::} (<code> (<index> index =  (<n> 41)) {::} (<a> n =  (<n> 49)) {::} (<b> b =  (<n> 17)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<data> (<point> opposite[b]))   (<eval> >)   (<data> (<point> main[b])) :{:x =  (<expr> (x /  (<const> 0.4) )) :})) {::} (<code> (<index> index =  (<n> 46)) {::} (<a> n =  (<n> 33)) {::} (<b> b =  (<n> 27)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if c  (<eval> >)   (<data> (<point> main[b])) :{:x =  (<expr> (x -  (<const> 0.8) )) :})) {::} (<code> (<index> index =  (<n> 25)) {::} (<a> n =  (<n> 48)) {::} (<b> b =  (<n> 42)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> main[b])  <  (<point> opposite[ (<n> 33) ])  +  (<d> 0) :{:x =  (<expr> (x +  (<const> 0.7) )) :}))) {::} (<code> (<index> index =  (<n> 49)) {::} (<a> n =  (<n> 27)) {::} (<b> b =  (<n> 10)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 5000) :{:x =  (<expr> (x /  (<const> 0.8) )) :})) {::} (<code> (<index> index =  (<n> 30)) {::} (<a> n =  (<n> 40)) {::} (<b> b =  (<n> 5)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> opposite[b])  >  (<point> opposite[b])  +  (<d> 1) :{:x =  (<expr> (<const> 0.4)) :})) {::} (<code> (<index> index =  (<n> 49)) {::} (<a> n =  (<n> 4)) {::} (<b> b =  (<n> 37)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if c  (<eval> <)   (<data> (<point> main[b])) :{:x =  (<expr> (x /  (<const> 0.1) )) :}))))) {::} (<code> (<index> index =  (<n> 31)) {::} (<a> n =  (<n> 41)) {::} (<b> b =  (<n> 41)) {::} (<c> c =  (<data> (<point> opposite[ (<n> 20) ]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> >)   (<data> (<n_avg> (<mainPartial> sum(main[-index:])))) :{:x =  (<expr> (x +  (<const> 0.4) )) :})) {::} (<code> (<index> index =  (<n> 5)) {::} (<a> n =  (<n> 36)) {::} (<b> b =  (<n> 9)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> (<compareSum> if abs( (<mainPartial> sum(main[:-index]))  -  (<oppositePartial> sum(opposite[:-index])) ) >  (<smaller> 100) :{:x =  (<expr> (x +  (<const> 0.1) )) :})) {::} (<code> (<index> index =  (<n> 42)) {::} (<a> n =  (<n> 50)) {::} (<b> b =  (<n> 18)) {::} (<c> c =  (<data> (<combo> (<data> (<point> main[b]))   (<combine> -)   (<data> (<point> main[b]))))) {::} (<if> if  (<point> opposite[b])  >  (<point> opposite[b])  +  (<d> 5) :{:x =  (<expr> (x +  (<const> 0.7) )) :}) {::} (<code> (<index> index =  (<n> 34)) {::} (<a> n =  (<n> 16)) {::} (<b> b =  (<n> 34)) {::} (<c> c =  (<data> (<point> main[ (<n> 14) ]))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 5000) :{:x =  (<expr> (x *  (<const> 0.6) )) :})) {::} (<code> (<index> index =  (<n> 7)) {::} (<a> n =  (<n> 17)) {::} (<b> b =  (<n> 46)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<data> (<point> opposite[b]))   (<eval> <)   (<data> (<point> opposite[b])) :{:x =  (<expr> (x /  (<const> 0.3) )) :}))) {::} (<code> (<index> index =  (<n> 26)) {::} (<a> n =  (<n> 26)) {::} (<b> b =  (<n> 4)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))) {::} (<if> if c  (<eval> <)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index])))) :{:x =  (<expr> (x /  (<const> 1.0) )) :}) {::} (<code> (<index> index =  (<n> 44)) {::} (<a> n =  (<n> 11)) {::} (<b> b =  (<n> 23)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> <)   (<data> (<point> main[b])) :{:x =  (<expr> (x /  (<const> 1.0) )) :}))) {::} (<code> (<index> index =  (<n> 2)) {::} (<a> n =  (<n> 19)) {::} (<b> b =  (<n> 23)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))) {::} (<if> if  (<point> opposite[ (<n> 32) ])  >  (<point> opposite[b])  +  (<d> 8) :{:x =  (<expr> (x -  (<const> 0.7) )) :}) {::} (<code> (<index> index =  (<n> 0)) {::} (<a> n =  (<n> 36)) {::} (<b> b =  (<n> 26)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> main[ (<n> 28) ])  <  (<point> main[ (<n> 28) ])  +  (<d> 7) :{:x =  (<expr> (x -  (<const> 0.6) )) :})) {::} (<code> (<index> index =  (<n> 23)) {::} (<a> n =  (<n> 6)) {::} (<b> b =  (<n> 27)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<data> (<point> opposite[b]))   (<eval> <)   (<data> (<point> opposite[b])) :{:x =  (<expr> (<const> 0.5)) :})) {::} (<code> (<index> index =  (<n> 1)) {::} (<a> n =  (<n> 23)) {::} (<b> b =  (<n> 29)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> <)   (<data> (<point> main[b])) :{:x =  (<expr> (x +  (<const> 0.8) )) :})))))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.07865168539325842, 0.48580582175970166]