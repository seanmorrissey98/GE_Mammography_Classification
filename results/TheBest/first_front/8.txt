Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 33
  if opposite[index] < sum(main[-index:]):
    x = (x + 0.8)
  index = 12
  if abs(sum(main) - sum(opposite)) > 10000:
    x = (x - 1.0)
  return x
XXX_output_XXX = p()

Genotype:
[91308, 86581, 40250, 29969, 69474, 60572, 58551, 56286, 18666, 95362, 6159, 8325, 62659, 40370, 14308, 82892, 4257, 44595, 90945, 18253, 57359, 53060, 22154, 81387, 76344, 77590, 30961, 69624, 25021, 83012, 5878, 82889, 82673, 25258]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 33)) {::} (<if> if  (<data> (<point> opposite[index]))   (<eval> <)   (<data> (<n_avg> (<mainPartial> sum(main[-index:])))) :{:x =  (<expr> (x +  (<decimal> 0.8) )) :}) {::} (<code> (<index> index =  (<n> 12)) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 10000) :{:x =  (<expr> (x -  (<decimal> 1.0) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9735776688685276, 0.9700545545153997]