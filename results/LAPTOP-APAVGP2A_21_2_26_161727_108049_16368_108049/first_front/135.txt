Generation:
6

Phenotype:
def p():
  x = 0.0
  index = 17
  if sum(opposite[:-index]) + sum(opposite[-index:]) - opposite[index] + main[index] - opposite[index] > sum(main[:-index]) + main[index] + opposite[index] + opposite[index] - main[index] - sum(main[-index:]) - sum(main[:-index]) - sum(main[:-index]) - main[index]:
    x = (x + 0.9)
  index = 21
  if main[index] + opposite[index] + opposite[index] + sum(opposite[:-index]) - sum(main[:-index]) - sum(main[-index:]) - main[index] + opposite[index] < main[index] + sum(opposite[:-index]) + sum(opposite[-index:]) + sum(opposite[:-index]) + main[index]:
    x = (x - 0.5)
  index = 26
  if opposite[index] - sum(opposite[:-index]) + sum(opposite[-index:]) - opposite[index] + main[index] - opposite[index] - opposite[index] < sum(main[-index:]) - sum(opposite[:-index]) - opposite[index] - sum(opposite[:-index]):
    x = (x - 0.8)
  return x
XXX_output_XXX = p()

Genotype:
[42757, 31158, 21091, 14881, 32253, 12530, 48688, 74060, 44820, 41543, 55152, 92448, 52940, 89981, 19450, 60858, 45870, 66989, 85622, 84809, 86015, 45511, 95760, 62727, 46858, 62658, 71054, 81424, 76125, 82934, 74018, 26021, 12972, 50649, 40817, 53162, 18683, 91316, 82409, 60974, 31212, 6104, 10769, 45998, 38348, 10060, 79431, 31557, 49293, 12290, 53107, 95593, 63477, 11249, 59930, 52568, 83810, 27113, 20960, 97465, 25898, 89795, 9977, 481, 86486, 65761, 26843, 82272, 24844, 95006, 22377, 87779, 19940, 76119, 92886, 59417, 9545, 60120, 39880, 30868, 38163, 49895, 16217, 58602, 29721, 15905, 48575, 48310, 34260, 22379, 66318, 47027, 80551, 23975, 1603, 4164, 87052, 66244, 11757, 27250, 67557, 31279, 26105, 16814, 31330, 71771, 39959, 1546, 11317, 92929, 7091, 45923, 43425, 51828, 46892, 67945, 18031, 55426, 59301, 52045, 55673, 58945, 44908, 84562, 44852, 99309, 21240, 9109, 31611, 23394, 14341, 27321, 57654, 12677, 214, 51712, 38054, 67911, 89920, 69522, 84258, 38507, 48395, 41419, 81069, 30442, 24615, 38029, 13382, 56897, 20533, 4476, 42506, 86412, 79870, 31049, 73281, 42753, 73843, 17992, 55353, 60471, 73300, 48742, 50286, 74851, 69765, 76444, 99968, 15939, 37157, 6379, 76573, 3611, 77766, 2312, 35374, 48641, 38131, 32801, 74246, 52437, 26721, 49274, 64345, 47495, 90909, 44088, 80052, 49378, 70433, 14687, 92276, 23963, 96794, 96335, 80513, 36575, 36781, 95580, 43212, 50518, 88792, 35156, 38608, 40112, 23537, 32161, 25221, 65385, 90046, 43317, 83706, 55219, 48517, 64679, 40538, 81032, 83119, 21736, 12362, 68017, 70899, 67059, 93772, 40497, 16151, 30887, 40725, 80871, 83680, 7362, 47857, 68734, 89987, 53822, 71495, 99950, 33674, 46835, 65979, 50015, 65541, 961, 803, 45417, 75587, 85994, 55083, 25509, 44694, 67637, 68683, 27899, 46306, 38188, 71345, 78609, 95951, 47036, 4875, 8885, 78336, 9560, 84103, 4781, 97760, 32402, 64885, 19119, 84135, 46669, 41530, 81618, 50146, 85019, 95390, 34744, 72926, 31436, 9853, 99894, 95597, 59449, 66494, 2772, 15558, 6977, 56355, 58687, 32487, 79297, 63230, 4016, 11520, 48104, 70921, 94879, 33848, 22588, 10335, 68135, 66096, 64297, 62223, 12145, 31133, 84063, 11307, 18546, 53157, 69888, 16762, 4171, 74581, 43344, 12117, 85289, 52803]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 17)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))))   (<combine> -)   (<data> (<point> opposite[index]))))   (<eval> >)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<point> main[index]))))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))))   (<combine> -)   (<data> (<point> main[index])))))) :{:x =  (<expr> (x +  (<decimal> 0.9) )) :}) {::} (<code> (<index> index =  (<n> 21)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<point> main[index]))))))   (<combine> +)   (<data> (<point> opposite[index]))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))))))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> +)   (<data> (<point> main[index])))))) :{:x =  (<expr> (x -  (<decimal> 0.5) )) :}) {::} (<code> (<index> index =  (<n> 26)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<point> opposite[index]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index])))))))) :{:x =  (<expr> (x -  (<decimal> 0.8) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9916897506925207, 0.6412133675707363]