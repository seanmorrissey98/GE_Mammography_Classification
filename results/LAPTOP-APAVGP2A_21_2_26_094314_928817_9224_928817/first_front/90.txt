Generation:
9

Phenotype:
def p():
  x = 0.0
  index = 30
  n = 31
  b = 18
  c = main[b] * opposite[b]
  if main[26] < opposite[12] + 3:
    x = (x + 0.2)
  index = 46
  n = 41
  b = 24
  c = sum(opposite[:-index])
  if abs(sum(main[:-index]) - sum(opposite[:-index])) > 50:
    x = (x * 0.6)
  index = 3
  n = 32
  b = 11
  c = opposite[b]
  if main[b] > opposite[b]:
    x = (x + 0.9)
  return x
XXX_output_XXX = p()

Genotype:
[21606, 53994, 35532, 27093, 39034, 25154, 16401, 37418, 52867, 31202, 61064, 22214, 7583, 98934, 92783, 25373, 22347, 41485, 9962, 89413, 87993, 13629, 81130, 44133, 52604, 77340, 53364, 27944, 31145, 79499, 81646, 9629, 84553, 3600, 68976, 12916, 11027, 69507, 8199, 21866, 17408, 26366, 75641, 37911, 31931, 72628, 26623, 88338, 32082, 47555, 5488, 11265, 37236, 56986, 10993, 5642, 57601, 13192, 708, 96116, 58286, 65168, 27834, 45716, 17459, 27357, 72336, 14139, 88957, 92767, 53598, 42247, 95812, 18090, 13014, 90243, 35030, 95400, 43884, 65982, 38300, 24033, 53552, 42014, 11408, 43683, 30779, 40648, 44181, 28135, 94450, 11965, 79413]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 30)) {::} (<a> n =  (<n> 31)) {::} (<b> b =  (<n> 18)) {::} (<c> c =  (<data> (<combo> (<data> (<point> main[b]))   (<combine> *)   (<data> (<point> opposite[b]))))) {::} (<if> if  (<point> main[ (<n> 26) ])  <  (<point> opposite[ (<n> 12) ])  +  (<d> 3) :{:x =  (<expr> (x +  (<const> 0.2) )) :}) {::} (<code> (<index> index =  (<n> 46)) {::} (<a> n =  (<n> 41)) {::} (<b> b =  (<n> 24)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))) {::} (<if> (<compareSum> if abs( (<mainPartial> sum(main[:-index]))  -  (<oppositePartial> sum(opposite[:-index])) ) >  (<smaller> 50) :{:x =  (<expr> (x *  (<const> 0.6) )) :})) {::} (<code> (<index> index =  (<n> 3)) {::} (<a> n =  (<n> 32)) {::} (<b> b =  (<n> 11)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> >)   (<data> (<point> opposite[b])) :{:x =  (<expr> (x +  (<const> 0.9) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9801832516513957, 0.8224107603760697]