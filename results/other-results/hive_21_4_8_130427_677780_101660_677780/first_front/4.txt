Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 41
  if main[index] < 1:
    if main[index] < opposite[index] + 0.0000001:
      x = (x + 0.8)
  else:
    if opposite[index] > opposite[index] + 6:
      x = (x - 0.0001)
    else:
      x = (x + 1.0)
  index = 27
  if sum(main) / 52 < opposite[index]:
    x = (x - 0.0001)
  index = 2
  if opposite[index] > main[index]:
    x = (x - 0.0001)
  index = 8
  if main[index] > opposite[index]:
    x = (x - 0.2)
  return x
XXX_output_XXX = p()

Genotype:
[93778, 90067, 97691, 97764, 77308, 96050, 5008, 22801, 81265, 25517, 32100, 42474, 73365, 42226, 37359, 14316, 70507, 14306, 40146, 51486, 74639, 17556, 50392, 55773, 61797, 45943, 26869, 24953, 31552, 40563, 5467, 76231, 81275, 89933, 45216, 14287, 44917, 86369, 37708, 23699, 8451, 89500, 73101, 35987, 44561, 31516, 69795, 75283, 44849, 44599, 61914, 53936, 23245, 92257, 98097, 2374, 10901, 42898, 30244, 94547, 84194, 57815, 5817, 59368, 27851, 19779, 839, 68743, 86091, 94802, 97893, 1418, 34743, 47756, 65728, 53587, 78560, 10438, 93151, 31813, 32906]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 41)) {::} (<if> if main[index] < 1:{: (<compareDec> if  (<point> main[index])  <  (<point> opposite[index])  +  (<decimal> 0.0000001) :{:x =  (<expr> (x +  (<decimal> 0.8) )) :}) :}else:{: (<compareInt> if  (<point> opposite[index])  >  (<point> opposite[index])  +  (<ints> 6) :{:x =  (<expr> (x -  (<decimal> 0.0001) )) :}else:{:x =  (<expr> (x +  (<decimal> 1.0) )) :}) :}) {::} (<code> (<index> index =  (<n> 27)) {::} (<if> if  (<data> (<average> sum(main) / 52))   (<eval> <)   (<data> (<point> opposite[index])) :{:x =  (<expr> (x -  (<decimal> 0.0001) )) :})) {::} (<code> (<index> index =  (<n> 2)) {::} (<if> if  (<data> (<point> opposite[index]))   (<eval> >)   (<data> (<point> main[index])) :{:x =  (<expr> (x -  (<decimal> 0.0001) )) :})) {::} (<code> (<index> index =  (<n> 8)) {::} (<if> if  (<data> (<point> main[index]))   (<eval> >)   (<data> (<point> opposite[index])) :{:x =  (<expr> (x -  (<decimal> 0.2) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.7880184331797235, 0.5218516280123895]