Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 29
  if main[index] - sum(main[-index:]) + main[index] - main[index] + main[index] - main[index] - opposite[index] - opposite[index] + main[index] + opposite[index] + opposite[index] - sum(opposite[-index:]) + main[index] + main[index] - main[index] + sum(main[-index:]) < opposite[index] + opposite[index] - sum(main[-index:]) - sum(main[-index:]) - sum(main[:-index]) - main[index] + main[index] - main[index] + main[index] - main[index] + opposite[index] - opposite[index] + main[index] - main[index] - opposite[index] - sum(main[-index:]):
    x = (x - 0.000001)
  index = 47
  if sum(main[:-index]) + sum(main[:-index]) - opposite[index] + sum(opposite[-index:]) - opposite[index] - sum(opposite[-index:]) + sum(main[:-index]) < main[index] + main[index] + sum(main[:-index]) + sum(opposite[-index:]) - opposite[index] + opposite[index]:
    x = (x + 0.5)
  return x
XXX_output_XXX = p()

Genotype:
[89217, 88100, 58797, 74301, 88915, 28667, 72977, 18388, 63070, 98485, 54317, 39146, 44936, 80543, 93965, 28068, 19188, 1061, 4799, 41975, 74361, 54452, 99365, 28552, 40892, 25649, 24545, 7078, 29354, 31835, 8297, 77329, 23375, 58745, 14676, 28302, 36530, 79775, 72362, 49028, 67863, 85334, 99370, 67532, 40187, 14907, 93543, 71748, 49120, 77563, 36325, 86320, 79245, 573, 4727, 19551, 73525, 96732, 47162, 65084, 20179, 72509, 77503, 3592, 32719, 54237, 51851, 70834, 62760, 46731, 97537, 82856, 77415, 39998, 30022, 16143, 9003, 66660, 34817, 45423, 89314, 21653, 45788, 60806, 6576, 50429, 53160, 32932, 16031, 44292, 82821, 92956, 78404, 25377, 3529, 81935, 54085, 79377, 72559, 41593, 36720, 69044, 35558, 84933, 65732, 91706, 4098, 71604, 56402, 25403, 5396, 20600, 11528, 28985, 6077, 76561, 67127, 92980, 53819, 10117, 49710, 47201, 41501, 2103, 31840, 45473, 40679, 15650, 72670, 91262, 12951, 93802, 92861, 44741, 74827, 52564, 60700, 52645, 52732, 2315, 35232, 66920, 60180, 79139, 91980, 21608, 91814, 36052, 6302, 84548, 38360, 62214, 91932, 24279, 46057, 25875, 55245, 5783, 38880, 44006, 72289, 82642, 82990, 11905, 26974, 17172, 57949, 51246, 11575, 94504, 39883, 40945, 11041, 5108, 48858, 3821, 46544, 88256, 66628, 76014, 1876, 90546, 77887, 31181, 78896, 75495, 9076, 77572, 46821, 42733, 66807, 5243, 27905, 83482, 94669, 34366, 67060, 69780, 17957, 95610, 89928, 2462, 51519, 4133, 55876, 61299, 1115, 16882, 76935, 69430, 36230, 488, 88408, 83677, 58540, 41472, 29916, 18466, 89155, 49818, 64087, 98936, 75601, 3391, 6856, 62610, 87606, 71827, 81614, 45884, 98588, 68937, 23472, 55789, 27368, 26086, 95795, 32484, 26146, 71010, 38858, 72230, 55303, 17588, 20745, 66638, 83803, 16913, 10972, 60012, 64754, 86200, 95370, 68003, 73991, 17572, 56355, 18291, 28628, 2657, 12018, 48314, 52760, 43876, 55889, 23453, 29109, 12706, 39494, 35309, 2962, 782, 34356, 12507, 34493, 58881, 35433, 20908, 34983, 99880, 52035, 67482, 55779, 75121, 43478, 39812, 50554, 94964, 1155, 43777, 12933, 12584, 37216, 11779, 40983, 35827, 36142, 46239, 31266, 3635, 32958, 52121, 42557, 3324, 15114, 51662, 59887, 4592, 21255, 10219, 11953, 69731, 35392, 29231, 43215, 34868, 33675, 55168, 22819, 9973, 25607, 43431, 84830, 28388, 29720, 37102, 89364, 67926, 52784, 63878, 64863, 81039, 12126, 41245, 34201, 50336, 12425, 50028, 56563, 73410, 20038, 42742, 63084, 48658, 78942, 84693, 48875, 12396, 68735, 32362, 52294, 42820, 10654, 84997, 72339, 92891, 1994, 43292, 30372, 56479, 78492, 41978, 94872, 73839, 11057, 48916]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 29)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<point> main[index]))))))   (<combine> -)   (<data> (<point> opposite[index]))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> opposite[index]))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> main[index]))))))))   (<combine> -)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> -)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> main[index]))))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))))   (<combine> -)   (<data> (<point> main[index]))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:])))))))))) :{:x =  (<expr> (x -  (<decimal> 0.000001) )) :}) {::} (<code> (<index> index =  (<n> 47)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))))   (<combine> +)   (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))))))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> -)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<point> opposite[index])))))) :{:x =  (<expr> (x +  (<decimal> 0.5) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9997869166844237, 0.5059786510399805]