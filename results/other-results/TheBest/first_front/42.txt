Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 35
  if sum(main[-index:]) - sum(opposite[:-index]) - main[index] + main[index] + opposite[index] + main[index] - main[index] + main[index] - sum(opposite[:-index]) - opposite[index] + main[index] + main[index] + main[index] - opposite[index] < main[index] - main[index] + opposite[index] - opposite[index] - main[index] + sum(opposite[-index:]) + opposite[index] - main[index] - sum(opposite[:-index]) - sum(opposite[:-index]) - sum(main[-index:]):
    x = (x - 1.0)
  return x
XXX_output_XXX = p()

Genotype:
[77363, 7736, 95202, 70248, 96745, 83105, 623, 58133, 9441, 36259, 96431, 34301, 75158, 74211, 93817, 87749, 4772, 28120, 31904, 62222, 61178, 48110, 59228, 90599, 27806, 70628, 64208, 10773, 85261, 40914, 55922, 15593, 27587, 1683, 21214, 30196, 51724, 75503, 66545, 9145, 39277, 8168, 34735, 6132, 8569, 44954, 78007, 11076, 47331, 77116, 60488, 34486, 12626, 3622, 32283, 95044, 68176, 50805, 32132, 10897, 55896, 80324, 10082, 28289, 64067, 30259, 801, 44626, 63165, 29126, 5734, 41439, 80570, 19119, 68404, 57161, 63825, 81585, 37850, 56207, 97009, 9460, 46192, 43205, 28046, 31302, 99022, 52290, 89525, 83941, 13740, 1486, 58568, 64165, 88018, 9013, 22378, 79665, 92049, 5308, 26240, 2511, 5940, 90319, 27025, 3367, 91301, 56059, 703, 63056, 60008, 97609, 36007, 32120, 69258, 41490, 91297, 41065, 95710, 45922, 93154, 41946, 97373, 10531, 29106, 70304, 25991, 33072, 13009, 61033, 22522, 37264, 20986, 85214, 82676, 79730, 67593, 21530, 63002, 77551, 91310, 5144, 3554, 33690, 16900, 41002, 11479, 29619, 99708, 10993, 79193, 79603, 62976, 50560, 20069, 86774, 88054, 68164, 53020, 20718, 67334, 90710, 77064, 23952, 58570, 11375, 35396, 68732, 54249, 63219, 47567, 16864, 39117, 53700, 35497, 76190, 73266, 15124, 82346, 13628, 91210, 40641, 53055, 65758, 47775, 23890, 5762, 9175, 78098, 30988, 8745, 3347, 98783, 17144, 34416, 93697, 11568, 91533, 2583, 77359, 61424, 16555, 91892, 50724]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 35)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> -)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> main[index]))))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> -)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> -)   (<data> (<point> opposite[index]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<point> opposite[index]))))))   (<combine> -)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> +)   (<data> (<point> opposite[index]))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:])))))))))) :{:x =  (<expr> (x -  (<decimal> 1.0) )) :})) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9938205838482846, 0.5998514683947306]