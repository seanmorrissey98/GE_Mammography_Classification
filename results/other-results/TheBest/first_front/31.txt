Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 40
  if main[index] + opposite[index] + opposite[index] - opposite[index] + opposite[index] + main[index] - sum(opposite[:-index]) - sum(main[:-index]) - sum(main[-index:]) - main[index] + opposite[index] + sum(opposite[:-index]) - main[index] + opposite[index] + sum(opposite[:-index]) + sum(main[:-index]) - opposite[index] + opposite[index] < sum(main[-index:]) + sum(opposite[:-index]) - sum(main[-index:]) - sum(main[:-index]) - opposite[index] - main[index] + opposite[index] - main[index] - sum(opposite[-index:]) + opposite[index]:
    x = (x - 0.9)
  index = 13
  if main[index] + sum(main[:-index]) + main[index] + main[index] - sum(opposite[:-index]) < opposite[index] - sum(opposite[:-index]) - sum(opposite[:-index]) - sum(main[:-index]) - opposite[index]:
    x = (x + 0.3)
  return x
XXX_output_XXX = p()

Genotype:
[9788, 75761, 32376, 65197, 92372, 3847, 36146, 87725, 54968, 18585, 67430, 67975, 24279, 57591, 17992, 4985, 70495, 94706, 27809, 58323, 82667, 17039, 72167, 96645, 5753, 11904, 47273, 59534, 70238, 24455, 27693, 32046, 46974, 38705, 56223, 73095, 32255, 48098, 30660, 16200, 22034, 92229, 24043, 43301, 72572, 1803, 4757, 48145, 96912, 92048, 93679, 94637, 14712, 52961, 60633, 79410, 15627, 83878, 35103, 89960, 28444, 88496, 99015, 47389, 37186, 64598, 45144, 2672, 57575, 72837, 45868, 19658, 78530, 11638, 48947, 72926, 34582, 53755, 2328, 12369, 68160, 50700, 37334, 64044, 81245, 28922, 47499, 23462, 60867, 61955, 88835, 55586, 13842, 45827, 46103, 29995, 55400, 66065, 59769, 10843, 48568, 45310, 8520, 93297, 11100, 68980, 12586, 6359, 91382, 11947, 20023, 93884, 84917, 98400, 11056, 75882, 79067, 74807, 92937, 24433, 46453, 87919, 91631, 93418, 41913, 71313, 10789, 35820, 98668, 92188, 56536, 78446, 42521, 57690, 29522, 73004, 3049, 63422, 86894, 20466, 3005, 18289, 76659, 80834, 27114, 72803, 6072, 8642, 86499, 56111, 69980, 36989, 31802, 85175, 24249, 64264, 16161, 90066, 19889, 81768, 24933, 17536, 86526, 45303, 17381, 67515, 7476, 4363, 92373, 98589, 34714, 53324, 20687, 88711, 822, 97484, 42307, 21916, 86891, 94071, 56699, 56061, 46448, 58799, 72283, 36876, 72223, 35725, 9772, 47285, 48655, 16841, 28739, 81059, 4115, 64873, 78805, 69651, 99609, 23231, 29095, 15853, 13792, 59197, 56196, 9889, 14134, 11362, 84234, 78598, 3031, 739, 53442, 33682, 76045, 23219, 85769, 13519, 57100, 69003, 93465, 45284, 77253, 12236, 55576, 27, 20578, 46701, 93612, 63075, 84547, 52580, 75886, 32600, 90627, 11364, 99857, 34345, 5148, 6731, 75223, 44586, 92411, 68740, 82368, 1962, 15631, 56180, 52592, 29540, 17945, 4552, 49726, 41103, 64742, 70529, 79375, 64556, 47671, 39074, 38321, 724, 39852, 22105, 29580, 89932, 29577, 94935, 296, 99768, 66111, 41652, 94904, 53554, 32278, 6212, 49398, 89564, 22011, 37590, 10350, 95963, 43757, 54721, 80594, 64218, 9280, 50997, 36519, 77266, 1020, 60335, 99770, 65975, 44800, 68916, 19940, 13938, 31353, 99011, 53192, 2177, 89618, 48205, 37656, 89863, 46053, 38723, 85104, 94798, 74708, 97583, 27482, 47241, 18464, 27584]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 40)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<point> opposite[index]))))))   (<combine> +)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> opposite[index]))))))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> opposite[index]))))   (<combine> -)   (<data> (<point> main[index]))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> +)   (<data> (<point> opposite[index])))))))) :{:x =  (<expr> (x -  (<decimal> 0.9) )) :}) {::} (<code> (<index> index =  (<n> 13)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<point> opposite[index])))))) :{:x =  (<expr> (x +  (<decimal> 0.3) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9846580012784999, 0.7528090547298518]