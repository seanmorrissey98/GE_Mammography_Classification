Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 0
  n = 47
  b = 21
  c = opposite[5]
  if abs(sum(main) - sum(opposite)) > 1000:
    x = (x + 0.2)
  index = 10
  n = 42
  b = 30
  c = main[b]
  if main[5] < opposite[b] + 9:
    x = (x - 0.3)
  index = 38
  n = 41
  b = 15
  c = main[b]
  if opposite[b] < opposite[b]:
    x = 0.6
  index = 40
  n = 37
  b = 21
  c = opposite[b]
  if c < opposite[b]:
    x = 0.3
  return x
XXX_output_XXX = p()

Genotype:
[26489, 84978, 74965, 75267, 93981, 36488, 72944, 15913, 51682, 35155, 6124, 35263, 37385, 97894, 81348, 57865, 46012, 23490, 47656, 65809, 73283, 10762, 82509, 77898, 46592, 85979, 97869, 47153, 80962, 88500, 53744, 56988, 73339, 41186, 2131, 86381, 27588, 68039, 66146, 64800, 34169, 84343, 44725, 15664, 30276, 96789, 91636, 18273, 27558, 71208, 10824, 53566, 94366, 81313, 70682, 56732, 9593, 86089, 78771, 13503, 57796, 62053, 73725, 65201, 1605, 78165, 36424, 26780, 47662, 69632, 14604, 83315, 49732, 88378, 25480, 44625, 33881, 75472, 87820, 44629, 37420, 39248, 91547, 82434, 44919, 75319, 42188, 79845, 55798, 77731, 44972, 39832, 18294, 75490, 78226, 87594, 44648, 12518, 98794, 61505, 63551, 8293, 28664, 5327, 80668]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 0)) {::} (<a> n =  (<n> 47)) {::} (<b> b =  (<n> 21)) {::} (<c> c =  (<data> (<point> opposite[ (<n> 5) ]))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 1000) :{:x =  (<expr> (x +  (<const> 0.2) )) :})) {::} (<code> (<index> index =  (<n> 10)) {::} (<a> n =  (<n> 42)) {::} (<b> b =  (<n> 30)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> main[ (<n> 5) ])  <  (<point> opposite[b])  +  (<d> 9) :{:x =  (<expr> (x -  (<const> 0.3) )) :})) {::} (<code> (<index> index =  (<n> 38)) {::} (<a> n =  (<n> 41)) {::} (<b> b =  (<n> 15)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<data> (<point> opposite[b]))   (<eval> <)   (<data> (<point> opposite[b])) :{:x =  (<expr> (<const> 0.6)) :})) {::} (<code> (<index> index =  (<n> 40)) {::} (<a> n =  (<n> 37)) {::} (<b> b =  (<n> 21)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if c  (<eval> <)   (<data> (<point> opposite[b])) :{:x =  (<expr> (<const> 0.3)) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.3539325842696629, 0.47283124895241846]