Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 46
  if main[index] < 1:
    if opposite[index] < opposite[index] + 0.00001:
      x = (x + 0.6)
  else:
    if main[index] > main[index] + 6:
      x = (x + 0.0000001)
    else:
      x = (x + 0.01)
  index = 24
  if abs(sum(main) - sum(opposite)) > 10000:
    x = (x + 0.3)
  return x
XXX_output_XXX = p()

Genotype:
[20272, 44709, 36053, 67758, 96640, 42347, 49657, 34811, 37425, 57234, 25140, 82443, 66458, 18022, 56884, 63746, 95562, 78160, 11802, 93749, 64440, 51920, 13386, 32184, 66245, 28478, 84952, 47624, 19741, 44523, 9675, 75048, 83694, 70565, 60674, 79137, 13294, 69919, 62120, 7315, 18097, 59519, 3224]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 46)) {::} (<if> if main[index] < 1:{: (<compareDec> if  (<point> opposite[index])  <  (<point> opposite[index])  +  (<decimal> 0.00001) :{:x =  (<expr> (x +  (<decimal> 0.6) )) :}) :}else:{: (<compareInt> if  (<point> main[index])  >  (<point> main[index])  +  (<ints> 6) :{:x =  (<expr> (x +  (<decimal> 0.0000001) )) :}else:{:x =  (<expr> (x +  (<decimal> 0.01) )) :}) :}) {::} (<code> (<index> index =  (<n> 24)) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 10000) :{:x =  (<expr> (x +  (<decimal> 0.3) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
0.5072179012149963