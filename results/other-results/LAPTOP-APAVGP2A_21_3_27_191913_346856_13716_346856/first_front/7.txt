Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 28
  if opposite[index] + main[index] - sum(main[-index:]) - sum(main) / 52 - opposite[index] + sum(opposite[-index:]) < sum(main[:-index]) + sum(opposite[:-index]) + main[index] - sum(main[-index:]) - sum(main[:-index]) + sum(main) / 52:
    x = (x + 0.9)
  index = 5
  if main[index] - main[index] + main[index] + sum(opposite) / 52 + sum(opposite[:-index]) + sum(opposite) / 52 + opposite[index] - opposite[index] + main[index] + opposite[index] < opposite[index] - main[index] + sum(main) / 52 + opposite[index] - opposite[index] - main[index] + sum(main[-index:]) - opposite[index]:
    x = (x + 0.001)
  index = 28
  if sum(opposite[-index:]) - sum(main) / 52 > sum(opposite[-index:]) + sum(opposite) / 52 + sum(opposite[:-index]) + sum(opposite) / 52:
    x = (x + 0.2)
  index = 45
  if main[index] - sum(opposite) / 52 > sum(main) / 52 + sum(main) / 52 + sum(opposite[:-index]) - sum(main) / 52:
    x = (x + 1.0)
  index = 41
  if opposite[index] + main[index] < sum(opposite) / 52 - sum(opposite[:-index]):
    x = (x - 0.6)
  index = 3
  if sum(opposite[:-index]) + sum(opposite[:-index]) - opposite[index] < sum(opposite[-index:]) - sum(main[-index:]):
    x = (x + 0.2)
  index = 13
  if sum(main[:-index]) - sum(opposite) / 52 + sum(main) / 52 + sum(main) / 52 - sum(main) / 52 > sum(main[:-index]) - sum(main) / 52:
    x = (x - 0.8)
  return x
XXX_output_XXX = p()

Genotype:
[1584, 4026, 44774, 71167, 88984, 44797, 2917, 9391, 53324, 48186, 65154, 40797, 24094, 89226, 55533, 1818, 68479, 63142, 57694, 79715, 3638, 83644, 82014, 33514, 17816, 64785, 1426, 94148, 88307, 2329, 10759, 85021, 76762, 19284, 98897, 25843, 34490, 81177, 97605, 81892, 57908, 89099, 51499, 75665, 64525, 18122, 28698, 69828, 45674, 76557, 62524, 40124, 82918, 83441, 32910, 99182, 52193, 9160, 97773, 13258, 48301, 23222, 86894, 8736, 76024, 79906, 57699, 33766, 44709, 42799, 41959, 40192, 21788, 94198, 15173, 35962, 34742, 57847, 86316, 56272, 1716, 65242, 39721, 58340, 52618, 45157, 2615, 80925, 12143, 17664, 19194, 46267, 63820, 22563, 7034, 36225, 14877, 45330, 49359, 35420, 23953, 24207, 80435, 87092, 98406, 13864, 39885, 58560, 68881, 28986, 43818, 20046, 18070, 48270, 67415, 1346, 7556, 56734, 81236, 47615, 70265, 49766, 66926, 80992, 24296, 62924, 34682, 55783, 30571, 12638, 37978, 23628, 54821, 24506, 5746, 39034, 6096, 58735, 65939, 17873, 27312, 20239, 85254, 14748, 94119, 25841, 31601, 22200, 33660, 56035, 86776, 75754, 67281, 31261, 74187, 81995, 77058, 62623, 24455, 96234, 64249, 44010, 90228, 7845, 81934, 48092, 55641, 73375, 62246, 22936, 63728, 59572, 65674, 63187, 86710, 71970, 26789, 58935, 66174, 53600, 21568, 53158, 69974, 28079, 86966, 51882, 84340, 26765, 64206, 3910, 23201, 30472, 17239, 88335, 96458, 58756, 10078, 37551, 22009, 14572, 38956, 78765, 47727, 2007, 57016, 88969, 9409, 68832, 52844, 69141, 29114, 71187, 69739, 96257, 95213, 15537, 75063, 53340, 42423, 71983, 40475, 44708, 43899, 74141, 67735, 69090, 9323, 55135, 74138, 40779, 70869, 2043, 29168, 42871, 54095, 70905, 65081, 54408, 90467, 37400, 70963, 50054, 55737, 55456, 95924, 95010, 91016, 88300, 17223, 43559, 94984, 50341, 86490, 86133, 72807, 96237, 6169, 34533, 54513, 7790, 10579, 11989, 16653, 4983, 20365, 24360, 83954, 78266, 28891, 35079, 55616, 30300, 23222, 78636, 39745, 97352, 33017, 49629, 44527, 64511, 49454, 23154, 10194, 26259, 26588, 17749, 84865, 86753, 91432, 26223, 81991, 1691, 33703, 14423, 35860, 8855, 24334, 52561, 43959, 3944, 58894, 90155, 6701, 73269, 92627, 36829, 91777, 16086, 89566, 93447, 20714, 5954, 8500, 58235, 29176, 11852, 21708, 41818, 51392, 55104, 42846, 49728, 26328, 17954, 59258, 8005, 55227, 47555, 16234, 52106, 69663, 27672, 20565, 58400, 44926, 84134, 45771, 29657, 23267, 91886, 94448, 76661, 76185, 92233, 71545, 18962, 79385, 73456, 74969, 56762, 4162, 64395, 30967, 56004, 33101, 99487, 49984, 47040, 82190, 62859, 43163, 58752, 700, 74991, 44894, 66824, 10258, 44135, 83179, 89226, 37584, 80682, 53822, 85161, 87811, 81115, 61946, 86421, 25093, 18214, 53462, 84689, 28013, 10331, 13663, 16458, 29012, 91219, 40445, 78242, 21413, 20867, 28511, 88532, 86942, 35597, 22953, 62579, 8932, 75188, 21620, 63280, 6425, 29613, 11270, 29956, 30098, 22528, 85198, 22501, 17719, 24193, 14956, 23026, 92240, 62684, 75300, 27889, 43887, 42101, 94209, 35344, 15304, 29656, 68077, 85708, 71314, 56612, 79773, 69769, 64723, 97752, 55302, 7627, 16445, 15498, 69479, 60815, 54798, 54844, 58498, 71893, 39489, 63751, 5940, 4743, 59878, 5064, 97646, 93264, 87889, 13778, 53908, 87926, 25566, 26116, 31704, 14968, 57924, 24933, 36616, 49204, 49842, 9169, 84857, 22165, 53024, 10665, 43921, 33431, 49989, 52638, 24141, 90176, 90479, 14807, 23173, 40809]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 28)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<average> sum(main) / 52))))))))   (<combine> -)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> +)   (<data> (<point> main[index]))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> +)   (<data> (<average> sum(main) / 52)))))))) :{:x =  (<expr> (x +  (<decimal> 0.9) )) :}) {::} (<code> (<index> index =  (<n> 5)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<point> main[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<average> sum(opposite) / 52))))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> +)   (<data> (<combo> (<data> (<average> sum(opposite) / 52))   (<combine> +)   (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<point> opposite[index]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<point> opposite[index]))))))))))   (<eval> <)   (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<average> sum(main) / 52))))))   (<combine> +)   (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> -)   (<data> (<point> opposite[index]))))))   (<combine> -)   (<data> (<combo> (<data> (<point> main[index]))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))   (<combine> -)   (<data> (<point> opposite[index])))))))) :{:x =  (<expr> (x +  (<decimal> 0.001) )) :})) {::} (<code> (<index> index =  (<n> 28)) {::} (<if> if  (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> -)   (<data> (<average> sum(main) / 52))))   (<eval> >)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> +)   (<data> (<average> sum(opposite) / 52))))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> +)   (<data> (<average> sum(opposite) / 52)))))) :{:x =  (<expr> (x +  (<decimal> 0.2) )) :})) {::} (<code> (<index> index =  (<n> 45)) {::} (<if> if  (<data> (<combo> (<data> (<point> main[index]))   (<combine> -)   (<data> (<average> sum(opposite) / 52))))   (<eval> >)   (<data> (<combo> (<data> (<combo> (<data> (<average> sum(main) / 52))   (<combine> +)   (<data> (<average> sum(main) / 52))))   (<combine> +)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> -)   (<data> (<average> sum(main) / 52)))))) :{:x =  (<expr> (x +  (<decimal> 1.0) )) :}) {::} (<code> (<index> index =  (<n> 41)) {::} (<if> if  (<data> (<combo> (<data> (<point> opposite[index]))   (<combine> +)   (<data> (<point> main[index]))))   (<eval> <)   (<data> (<combo> (<data> (<average> sum(opposite) / 52))   (<combine> -)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index])))))) :{:x =  (<expr> (x -  (<decimal> 0.6) )) :}) {::} (<code> (<index> index =  (<n> 3)) {::} (<if> if  (<data> (<combo> (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))   (<combine> +)   (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))))   (<combine> -)   (<data> (<point> opposite[index]))))   (<eval> <)   (<data> (<combo> (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))   (<combine> -)   (<data> (<n_avg> (<mainPartial> sum(main[-index:])))))) :{:x =  (<expr> (x +  (<decimal> 0.2) )) :})) {::} (<code> (<index> index =  (<n> 13)) {::} (<if> if  (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<average> sum(opposite) / 52))   (<combine> +)   (<data> (<average> sum(main) / 52))))   (<combine> +)   (<data> (<combo> (<data> (<average> sum(main) / 52))   (<combine> -)   (<data> (<average> sum(main) / 52))))))))   (<eval> >)   (<data> (<combo> (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))   (<combine> -)   (<data> (<average> sum(main) / 52)))) :{:x =  (<expr> (x -  (<decimal> 0.8) )) :}))))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.4148936170212766, 0.8303011292346298]