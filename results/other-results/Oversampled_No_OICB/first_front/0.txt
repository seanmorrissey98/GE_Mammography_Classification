Generation:
1

Phenotype:
def p():
  x = 0.0
  index = 49
  n = 27
  b = 13
  c = main[6]
  if abs(sum(main) - sum(opposite)) > 1000:
    x = 0.3
  index = 35
  n = 8
  b = 9
  c = main[b]
  if c > opposite[b]:
    x = (x / 0.3)
  index = 17
  n = 7
  b = 20
  c = main[b]
  if main[b] > main[b]:
    x = (x * 0.2)
  return x
XXX_output_XXX = p()

Genotype:
[40823, 91548, 18865, 88302, 97957, 94771, 87532, 11509, 8734, 10434, 89910, 15633, 30487, 33032, 74491, 39192, 53911, 44659, 47989, 24284, 26257, 59814, 28432, 28444, 65982, 53095, 26756, 94480, 88087, 70440, 42418, 29586, 78880, 2734, 23845, 6869, 78691, 88687, 9098, 60044, 69954, 38879, 40864, 93027, 55564, 56480, 62533, 42931, 60353, 6679, 24305, 21352, 89656, 40896, 28667, 43451, 20186, 43505, 67349, 81181, 63026, 81966, 33307, 40652, 73514, 18012, 78620, 5313, 41169, 97476, 32352, 58423, 14027, 43484, 74598, 732, 58755, 97827, 61113]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 49)) {::} (<a> n =  (<n> 27)) {::} (<b> b =  (<n> 13)) {::} (<c> c =  (<data> (<point> main[ (<n> 6) ]))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 1000) :{:x =  (<expr> (<const> 0.3)) :})) {::} (<code> (<index> index =  (<n> 35)) {::} (<a> n =  (<n> 8)) {::} (<b> b =  (<n> 9)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if c  (<eval> >)   (<data> (<point> opposite[b])) :{:x =  (<expr> (x /  (<const> 0.3) )) :})) {::} (<code> (<index> index =  (<n> 17)) {::} (<a> n =  (<n> 7)) {::} (<b> b =  (<n> 20)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> >)   (<data> (<point> main[b])) :{:x =  (<expr> (x *  (<const> 0.2) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.8998430962343096, 0.5047948169961722]