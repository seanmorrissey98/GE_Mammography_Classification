Generation:
0

Phenotype:
def p():
  x = 0.0
  n = 27
  b = 40
  c = opposite[5]
  if opposite[12] < opposite[41] + 2:
    x = (x - 0.2)
  n = 34
  b = 26
  c = main[17] + sum(opposite[-n:])/n
  if opposite[b] > main[31] + 4:
    x = 0.6
  n = 30
  b = 1
  c = main[30]
  if main[b] > opposite[b] + 5:
    x = (x - 0.2)
  n = 40
  b = 18
  c = sum(main[-n:])/n - sum(opposite[-n:])/n + sum(main[-n:])/n - main[34]
  if opposite[30] > main[21] + 6:
    x = 0.4
  n = 30
  b = 5
  c = sum(opposite[-n:])/n * sum(opposite[-n:])/n - sum(opposite[-n:])/n * sum(main[-n:])/n - sum(main[-n:])/n - opposite[b]
  if main[36] > main[12] + 2:
    x = (x - 1.0)
  n = 17
  b = 13
  c = sum(opposite[-n:])/n
  if main[21] > main[b] + 1:
    x = 0.2
  return x
XXX_output_XXX = p()

Genotype:
[19502, 65779, 70961, 22936, 91062, 50190, 4120, 19969, 78637, 12855, 98333, 56963, 38863, 55755, 46827, 39974, 28982, 80787, 22321, 55010, 12808, 46291, 86013, 33941, 84872, 73082, 1367, 26992, 42782, 35411, 39840, 14442, 80177, 234, 22045, 33646, 59395, 69224, 26290, 17095, 17777, 28644, 1356, 87134, 23002, 65892, 6775, 17842, 45981, 79214, 56980, 23205, 73915, 35817, 16741, 7057, 3805, 41503, 46892, 17919, 82216, 87725, 77621, 11654, 47728, 27422, 58719, 62985, 2200, 2737, 23841, 43471, 7976, 59376, 24248, 75565, 19138, 50882, 19261, 61418, 36191, 22062, 74610, 28734, 54516, 2420, 72303, 61332, 60472, 45726, 32131, 22700, 24986, 54275, 52217, 57749, 20477, 72951, 32281, 15266, 59871, 29391, 71429, 64853, 72560, 72491, 73483, 88155, 76377, 8074, 47721, 11428, 44305, 14561, 66960, 42450, 99402, 17465, 23842, 62089, 54810, 60818, 32676, 88346, 72534, 8732, 62542, 34639, 14416, 66100, 92684, 64795, 91354, 34455, 32604, 79967, 66506, 47246, 24348, 77324, 85921, 59315, 75651, 39967, 40985, 95271, 31806, 25582, 15240, 36719, 23169, 58706, 22952, 59286, 13219, 7815, 36632, 4695, 70315, 80890, 23861, 64849, 93631, 93010, 74959, 78827, 57557, 42887, 26065, 95907, 31031, 15527, 24151, 31246, 10377, 67860, 29025, 85456, 29925, 54666, 50010, 7458, 80007, 58487, 46066, 31941, 26134, 23855, 31477, 67268, 81640, 66645, 64907, 21516, 88790, 44051, 23479, 86538, 39989, 46263, 62788, 80163, 62074, 36494, 26630, 67328, 46179, 72861, 22384, 67199, 93114, 23626, 17992, 32570, 43845, 81310]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<a> n =  (<n> 27)) {::} (<b> b =  (<n> 40)) {::} (<c> c =  (<data> (<point> opposite[ (<n> 5) ]))) {::} (<if> if  (<point> opposite[ (<n> 12) ])  <  (<point> opposite[ (<n> 41) ])  +  (<d> 2) :{:x =  (<expr> (x -  (<const> 0.2) )) :}) {::} (<code> (<a> n =  (<n> 34)) {::} (<b> b =  (<n> 26)) {::} (<c> c =  (<data> (<combo> (<data> (<point> main[ (<n> 17) ]))   (<combine> +)   (<data> (<n_avg> sum(opposite[-n:])/n))))) {::} (<if> if  (<point> opposite[b])  >  (<point> main[ (<n> 31) ])  +  (<d> 4) :{:x =  (<expr> (<const> 0.6)) :}) {::} (<code> (<a> n =  (<n> 30)) {::} (<b> b =  (<n> 1)) {::} (<c> c =  (<data> (<point> main[ (<n> 30) ]))) {::} (<if> if  (<point> main[b])  >  (<point> opposite[b])  +  (<d> 5) :{:x =  (<expr> (x -  (<const> 0.2) )) :}) {::} (<code> (<a> n =  (<n> 40)) {::} (<b> b =  (<n> 18)) {::} (<c> c =  (<data> (<combo> (<data> (<combo> (<data> (<combo> (<data> (<n_avg> sum(main[-n:])/n))   (<combine> -)   (<data> (<n_avg> sum(opposite[-n:])/n))))   (<combine> +)   (<data> (<n_avg> sum(main[-n:])/n))))   (<combine> -)   (<data> (<point> main[ (<n> 34) ]))))) {::} (<if> if  (<point> opposite[ (<n> 30) ])  >  (<point> main[ (<n> 21) ])  +  (<d> 6) :{:x =  (<expr> (<const> 0.4)) :}) {::} (<code> (<a> n =  (<n> 30)) {::} (<b> b =  (<n> 5)) {::} (<c> c =  (<data> (<combo> (<data> (<combo> (<data> (<n_avg> sum(opposite[-n:])/n))   (<combine> *)   (<data> (<n_avg> sum(opposite[-n:])/n))))   (<combine> -)   (<data> (<combo> (<data> (<combo> (<data> (<n_avg> sum(opposite[-n:])/n))   (<combine> *)   (<data> (<n_avg> sum(main[-n:])/n))))   (<combine> -)   (<data> (<combo> (<data> (<n_avg> sum(main[-n:])/n))   (<combine> -)   (<data> (<point> opposite[b]))))))))) {::} (<if> if  (<point> main[ (<n> 36) ])  >  (<point> main[ (<n> 12) ])  +  (<d> 2) :{:x =  (<expr> (x -  (<const> 1.0) )) :})))) {::} (<code> (<a> n =  (<n> 17)) {::} (<b> b =  (<n> 13)) {::} (<c> c =  (<data> (<n_avg> sum(opposite[-n:])/n))) {::} (<if> if  (<point> main[ (<n> 21) ])  >  (<point> main[b])  +  (<d> 1) :{:x =  (<expr> (<const> 0.2)) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
0.5072179012149963