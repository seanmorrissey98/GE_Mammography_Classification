Generation:
0

Phenotype:
def p():
  x = 0.0
  index = 46
  if abs(sum(main) - sum(opposite)) > 10000:
    x = (x - 0.2)
  index = 9
  if main[index] < 1:
    if main[index] < opposite[index] + 0.0001:
      x = (x - 1.0)
  else:
    if main[index] < opposite[index] + 6:
      x = (x - 0.3)
    else:
      x = (x + 0.00001)
  index = 45
  if main[index] < 1:
    if main[index] > opposite[index] + 0.9:
      x = (x + 0.000001)
  else:
    if opposite[index] > main[index] + 9:
      x = (x + 0.6)
    else:
      x = (x - 0.00001)
  index = 39
  if sum(main) / 52 < opposite[index]:
    x = (x + 0.001)
  index = 23
  if abs(sum(main) - sum(opposite)) > 10000:
    x = (x - 0.7)
  index = 47
  if main[index] < sum(opposite) / 52:
    x = (x - 0.0001)
  index = 49
  if main[index] < 1:
    if opposite[index] < main[index] + 0.7:
      x = (x - 0.1)
  else:
    if opposite[index] > opposite[index] + 4:
      x = (x - 0.2)
    else:
      x = (x + 0.7)
  index = 22
  if main[index] > sum(opposite) / 52:
    x = (x - 0.2)
  return x
XXX_output_XXX = p()

Genotype:
[55245, 55185, 3776, 86701, 49502, 1762, 40173, 37779, 57273, 88023, 25379, 83629, 86356, 28144, 42227, 55769, 72173, 75409, 9424, 33961, 17495, 8780, 34731, 49450, 79465, 76351, 18093, 87500, 4931, 92181, 83745, 99746, 53372, 69508, 25704, 66619, 77261, 53039, 19507, 92146, 51673, 78677, 35376, 33790, 14918, 94594, 19048, 86618, 71626, 75221, 22823, 17791, 52808, 98629, 59705, 69184, 48468, 29870, 12561, 54905, 11801, 76193, 48143, 26101, 90294, 67884, 86737, 54743, 8592, 69767, 1477, 28549, 29889, 6429, 19597, 93490, 87995, 81798, 63952, 78559, 72547, 28535, 23684, 47756, 56522, 68074, 39639, 17952, 9442, 86930, 97605, 87061, 43852, 55687, 45227, 91532, 91188, 81445, 98271, 66402, 19695, 12597, 6509, 3820, 4790, 40156, 62165, 23783, 66486, 13595, 36063, 83048, 99738, 10393, 5088, 76372, 78397, 77365, 9526, 17501, 63701, 38128, 39710, 13383, 31998, 58798, 41997, 14990, 47575, 94554, 77523, 84681, 73362, 8238, 89086, 43445, 14460, 76473, 1111, 31871, 99332, 84564, 74415, 2377, 5673, 12382, 28385, 29328, 38682, 14104, 17602, 18579, 55868, 98362, 22519, 84239, 26731, 59632, 3435]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 46)) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 10000) :{:x =  (<expr> (x -  (<decimal> 0.2) )) :})) {::} (<code> (<index> index =  (<n> 9)) {::} (<if> if main[index] < 1:{: (<compareDec> if  (<point> main[index])  <  (<point> opposite[index])  +  (<decimal> 0.0001) :{:x =  (<expr> (x -  (<decimal> 1.0) )) :}) :}else:{: (<compareInt> if  (<point> main[index])  <  (<point> opposite[index])  +  (<ints> 6) :{:x =  (<expr> (x -  (<decimal> 0.3) )) :}else:{:x =  (<expr> (x +  (<decimal> 0.00001) )) :}) :}) {::} (<code> (<index> index =  (<n> 45)) {::} (<if> if main[index] < 1:{: (<compareDec> if  (<point> main[index])  >  (<point> opposite[index])  +  (<decimal> 0.9) :{:x =  (<expr> (x +  (<decimal> 0.000001) )) :}) :}else:{: (<compareInt> if  (<point> opposite[index])  >  (<point> main[index])  +  (<ints> 9) :{:x =  (<expr> (x +  (<decimal> 0.6) )) :}else:{:x =  (<expr> (x -  (<decimal> 0.00001) )) :}) :}) {::} (<code> (<index> index =  (<n> 39)) {::} (<if> if  (<data> (<average> sum(main) / 52))   (<eval> <)   (<data> (<point> opposite[index])) :{:x =  (<expr> (x +  (<decimal> 0.001) )) :}))) {::} (<code> (<index> index =  (<n> 23)) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 10000) :{:x =  (<expr> (x -  (<decimal> 0.7) )) :})) {::} (<code> (<index> index =  (<n> 47)) {::} (<if> if  (<data> (<point> main[index]))   (<eval> <)   (<data> (<average> sum(opposite) / 52)) :{:x =  (<expr> (x -  (<decimal> 0.0001) )) :}))) {::} (<code> (<index> index =  (<n> 49)) {::} (<if> if main[index] < 1:{: (<compareDec> if  (<point> opposite[index])  <  (<point> main[index])  +  (<decimal> 0.7) :{:x =  (<expr> (x -  (<decimal> 0.1) )) :}) :}else:{: (<compareInt> if  (<point> opposite[index])  >  (<point> opposite[index])  +  (<ints> 4) :{:x =  (<expr> (x -  (<decimal> 0.2) )) :}else:{:x =  (<expr> (x +  (<decimal> 0.7) )) :}) :}) {::} (<code> (<index> index =  (<n> 22)) {::} (<if> if  (<data> (<point> main[index]))   (<eval> >)   (<data> (<average> sum(opposite) / 52)) :{:x =  (<expr> (x -  (<decimal> 0.2) )) :}))))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9622641509433962, 0.6049957118353344]