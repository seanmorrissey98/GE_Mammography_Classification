Generation:
9

Phenotype:
def p():
  x = 0.0
  index = 38
  n = 18
  b = 26
  c = opposite[b]
  if opposite[19] > main[b] + 9:
    x = 0.8
  index = 32
  n = 19
  b = 41
  c = opposite[b] - main[b]
  if main[3] < opposite[b] + 3:
    x = (x * 0.1)
  index = 35
  n = 34
  b = 40
  c = sum(main[:-index])
  if abs(sum(main[-index:]) - sum(opposite[:-index])) > 1000:
    x = (x - 0.6)
  index = 11
  n = 9
  b = 15
  c = main[b]
  if opposite[15] > opposite[b] + 3:
    x = (x * 0.9)
  index = 31
  n = 19
  b = 18
  c = main[b]
  if main[14] > main[b] + 7:
    x = 0.2
  index = 8
  n = 36
  b = 42
  c = main[7]
  if main[b] > opposite[3] + 4:
    x = 1.0
  index = 36
  n = 4
  b = 15
  c = opposite[b]
  if opposite[b] < main[b] + 3:
    x = (x / 0.5)
  index = 25
  n = 20
  b = 10
  c = opposite[b] * main[b]
  if main[b] > opposite[39] + 0:
    x = (x + 0.7)
  index = 8
  n = 29
  b = 26
  c = sum(main[:-index])
  if main[4] > main[b] + 0:
    x = (x + 0.4)
  index = 8
  n = 37
  b = 7
  c = sum(main[:-index])
  if opposite[29] < main[31] + 2:
    x = (x * 1.0)
  return x
XXX_output_XXX = p()

Genotype:
[71260, 20318, 4922, 70643, 35956, 25042, 18732, 73129, 40499, 33005, 68164, 1526, 11277, 50278, 30226, 30306, 62453, 52763, 30933, 94828, 29459, 45137, 90053, 3437, 51409, 5906, 50676, 24855, 85348, 56246, 91089, 86832, 62610, 81473, 76075, 17973, 4042, 55824, 15657, 69433, 47861, 48943, 64517, 25939, 86689, 18537, 71040, 19453, 9529, 27640, 19620, 26783, 41289, 64604, 79802, 29024, 20869, 8608, 2891, 98510, 86124, 57237, 79650, 60976, 64182, 54028, 29639, 59180, 68754, 76365, 27133, 81388, 87117, 64556, 28990, 72004, 20663, 19440, 26837, 61636, 15115, 25279, 12520, 32849, 73519, 15188, 64628, 91463, 41788, 69130, 30753, 30677, 20473, 70076, 59572, 33322, 2056, 27684, 97317, 11668, 77754, 50160, 10723, 93702, 34918, 61312, 33490, 87848, 22415, 79814, 11157, 98572, 81722, 31676, 73017, 54384, 93721, 27307, 69706, 10051, 87174, 38939, 9909, 79211, 96480, 24369, 70716, 12929, 86396, 16096, 22070, 58055, 92353, 98343, 76104, 91144, 15117, 6626, 14690, 47284, 34543, 3438, 54578, 18218, 61255, 59072, 96272, 9602, 12554, 6837, 49963, 40471, 86533, 18109, 28844, 31333, 63105, 32948, 21829, 5050, 56662, 65476, 92935, 32494, 35198, 7934, 20612, 72491, 37933, 31547, 31068, 66111, 85161, 72983, 68662, 46645, 83897, 11070, 29502, 45140, 75636, 45569, 51161, 6573, 56510, 31785, 95019, 4359, 81327, 13976, 37879, 35904, 28115, 14304, 51610, 80821, 91773, 41429, 57950, 93426, 97450, 44267, 94818, 58566, 25757, 52988, 98613, 51448, 30294, 66337, 39172, 93196, 84239, 48927, 46948, 66960, 55325, 82232, 59815, 41659, 71705, 29469, 17948, 73997, 40652, 1812, 12262, 44181, 79631, 28117, 14599, 35321, 50096, 37927, 94405, 43231, 68452, 38914, 87838, 81694, 95756, 15078, 31278, 10636, 98825, 28610, 82465, 8948, 19337, 64594, 57592, 39927, 75487, 4983, 72375, 81347, 10845, 22119, 66843, 30558, 24104, 39172, 2982, 12568, 40123, 49811, 98340, 91169, 59701, 28609, 3253, 98044, 69150, 72185, 45185, 64955, 62824, 8050, 39006, 504]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 38)) {::} (<a> n =  (<n> 18)) {::} (<b> b =  (<n> 26)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> opposite[ (<n> 19) ])  >  (<point> main[b])  +  (<d> 9) :{:x =  (<expr> (<const> 0.8)) :}) {::} (<code> (<index> index =  (<n> 32)) {::} (<a> n =  (<n> 19)) {::} (<b> b =  (<n> 41)) {::} (<c> c =  (<data> (<combo> (<data> (<point> opposite[b]))   (<combine> -)   (<data> (<point> main[b]))))) {::} (<if> if  (<point> main[ (<n> 3) ])  <  (<point> opposite[b])  +  (<d> 3) :{:x =  (<expr> (x *  (<const> 0.1) )) :}) {::} (<code> (<index> index =  (<n> 35)) {::} (<a> n =  (<n> 34)) {::} (<b> b =  (<n> 40)) {::} (<c> c =  (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))) {::} (<if> (<compareSum> if abs( (<mainPartial> sum(main[-index:]))  -  (<oppositePartial> sum(opposite[:-index])) ) >  (<smaller> 1000) :{:x =  (<expr> (x -  (<const> 0.6) )) :})) {::} (<code> (<index> index =  (<n> 11)) {::} (<a> n =  (<n> 9)) {::} (<b> b =  (<n> 15)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> opposite[ (<n> 15) ])  >  (<point> opposite[b])  +  (<d> 3) :{:x =  (<expr> (x *  (<const> 0.9) )) :})) {::} (<code> (<index> index =  (<n> 31)) {::} (<a> n =  (<n> 19)) {::} (<b> b =  (<n> 18)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> main[ (<n> 14) ])  >  (<point> main[b])  +  (<d> 7) :{:x =  (<expr> (<const> 0.2)) :}))) {::} (<code> (<index> index =  (<n> 8)) {::} (<a> n =  (<n> 36)) {::} (<b> b =  (<n> 42)) {::} (<c> c =  (<data> (<point> main[ (<n> 7) ]))) {::} (<if> if  (<point> main[b])  >  (<point> opposite[ (<n> 3) ])  +  (<d> 4) :{:x =  (<expr> (<const> 1.0)) :}) {::} (<code> (<index> index =  (<n> 36)) {::} (<a> n =  (<n> 4)) {::} (<b> b =  (<n> 15)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> opposite[b])  <  (<point> main[b])  +  (<d> 3) :{:x =  (<expr> (x /  (<const> 0.5) )) :})))) {::} (<code> (<index> index =  (<n> 25)) {::} (<a> n =  (<n> 20)) {::} (<b> b =  (<n> 10)) {::} (<c> c =  (<data> (<combo> (<data> (<point> opposite[b]))   (<combine> *)   (<data> (<point> main[b]))))) {::} (<if> if  (<point> main[b])  >  (<point> opposite[ (<n> 39) ])  +  (<d> 0) :{:x =  (<expr> (x +  (<const> 0.7) )) :}) {::} (<code> (<index> index =  (<n> 8)) {::} (<a> n =  (<n> 29)) {::} (<b> b =  (<n> 26)) {::} (<c> c =  (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))) {::} (<if> if  (<point> main[ (<n> 4) ])  >  (<point> main[b])  +  (<d> 0) :{:x =  (<expr> (x +  (<const> 0.4) )) :})) {::} (<code> (<index> index =  (<n> 8)) {::} (<a> n =  (<n> 37)) {::} (<b> b =  (<n> 7)) {::} (<c> c =  (<data> (<n_avg> (<mainPartial> sum(main[:-index]))))) {::} (<if> if  (<point> opposite[ (<n> 29) ])  <  (<point> main[ (<n> 31) ])  +  (<d> 2) :{:x =  (<expr> (x *  (<const> 1.0) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9731515022373748, 0.9767718295500599]