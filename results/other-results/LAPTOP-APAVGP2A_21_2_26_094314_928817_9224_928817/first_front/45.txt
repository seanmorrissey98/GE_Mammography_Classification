Generation:
9

Phenotype:
def p():
  x = 0.0
  index = 9
  n = 41
  b = 29
  c = opposite[b] + opposite[b] + main[b] * opposite[b]
  if abs(sum(main) - sum(opposite)) > 10000:
    x = (x + 0.7)
  index = 37
  n = 5
  b = 12
  c = main[18] + sum(main[-index:])
  if c > opposite[b]:
    x = (x - 0.4)
  index = 35
  n = 35
  b = 19
  c = opposite[b] - main[b]
  if c < sum(main[-index:]):
    x = (x - 0.2)
  index = 32
  n = 37
  b = 12
  c = main[b]
  if c < sum(opposite[-index:]):
    x = 0.6
  index = 37
  n = 21
  b = 25
  c = opposite[b]
  if opposite[45] < opposite[19] + 5:
    x = (x * 0.5)
  index = 21
  n = 24
  b = 42
  c = main[b]
  if c < main[b]:
    x = (x * 0.5)
  index = 41
  n = 26
  b = 41
  c = opposite[b]
  if main[b] < main[b]:
    x = 0.2
  index = 26
  n = 10
  b = 35
  c = sum(opposite[:-index])
  if opposite[b] < main[16] + 7:
    x = (x * 0.8)
  index = 25
  n = 26
  b = 13
  c = sum(opposite[-index:])
  if opposite[b] > main[32] + 5:
    x = 0.9
  index = 46
  n = 11
  b = 35
  c = main[b]
  if opposite[b] < opposite[31] + 7:
    x = (x + 0.5)
  index = 29
  n = 10
  b = 39
  c = opposite[b]
  if main[b] > opposite[18] + 6:
    x = (x / 0.8)
  index = 17
  n = 13
  b = 32
  c = opposite[b] - opposite[b]
  if opposite[46] > opposite[b] + 2:
    x = (x / 0.8)
  index = 32
  n = 50
  b = 18
  c = sum(opposite[-index:])
  if abs(sum(main[:-index]) - sum(opposite[:-index])) > 50:
    x = (x / 0.9)
  index = 25
  n = 40
  b = 16
  c = opposite[b]
  if main[8] > main[35] + 1:
    x = (x - 0.1)
  index = 2
  n = 29
  b = 15
  c = opposite[b]
  if main[b] > opposite[b]:
    x = 0.4
  index = 21
  n = 22
  b = 22
  c = main[21]
  if opposite[b] < opposite[41] + 1:
    x = (x * 0.2)
  index = 15
  n = 49
  b = 10
  c = main[b]
  if opposite[12] < opposite[44] + 1:
    x = (x * 0.6)
  index = 7
  n = 48
  b = 27
  c = main[b]
  if main[b] < opposite[35] + 6:
    x = (x * 0.8)
  index = 26
  n = 9
  b = 6
  c = opposite[b]
  if abs(sum(main) - sum(opposite)) > 10000:
    x = (x - 0.7)
  return x
XXX_output_XXX = p()

Genotype:
[67749, 10405, 47231, 70082, 11703, 16435, 48893, 57746, 72259, 54919, 99130, 31222, 76433, 16953, 39825, 55775, 42577, 43506, 61682, 29675, 18717, 24390, 3800, 15029, 49598, 60762, 87473, 33230, 5003, 83521, 18518, 74638, 28960, 97720, 49993, 47186, 14700, 42366, 32723, 30575, 2089, 1588, 73624, 45196, 26158, 53045, 62766, 92196, 76330, 87236, 28746, 92657, 65734, 80, 54478, 2653, 22024, 16994, 6608, 24575, 13583, 67090, 83546, 98381, 22028, 59247, 70880, 84407, 94816, 3879, 4922, 28208, 51677, 87985, 27148, 29906, 30779, 29564, 98714, 69651, 5323, 55433, 60821, 94164, 98497, 6957, 25936, 98473, 41326, 55767, 94022, 44235, 21452, 28782, 96734, 45498, 28100, 32040, 49327, 1005, 69081, 37711, 30461, 91196, 24544, 31526, 4660, 96196, 12169, 68360, 88819, 13832, 71038, 63022, 7786, 35568, 6394, 84448, 60309, 96802, 74316, 4539, 92420, 30517, 14627, 12001, 16583, 92534, 56539, 70867, 86167, 54021, 11451, 83624, 90157, 35794, 43975, 73114, 82586, 54781, 86318, 15301, 54136, 57775, 85071, 8486, 97784, 71901, 79283, 98551, 44059, 61976, 71898, 78158, 42307, 97163, 69228, 19160, 22149, 26640, 46435, 24334, 49623, 72069, 40790, 23444, 65722, 30895, 36614, 37432, 5677, 37020, 81596, 57638, 16496, 22326, 57103, 47635, 10189, 20138, 42529, 23593, 50014, 38966, 14212, 91405, 9776, 24493, 60546, 92390, 86919, 21693, 21571, 2727, 33684, 54042, 74182, 6261, 5489, 29874, 15196, 45982, 54817, 1035, 82921, 42861, 22972, 29231, 40780, 60930, 34471, 76509, 73823, 79366, 24234, 23621, 32377, 13086, 4186, 50528, 2002, 17768, 59327, 68231, 52938, 84898, 49023, 27555, 64146, 82731, 10387, 77053, 24682, 22519, 45908, 76248, 4665, 6016, 8852, 88378, 72321, 37478, 12569, 27415, 71845, 55107, 25607, 61321, 71032, 89652, 29757, 72116, 89533, 60701, 990, 87146, 9941, 25434, 99549, 96218, 24821, 98652, 36339, 36004, 14970, 18715, 12250, 87804, 61194, 30427, 46472, 87892, 45708, 75106, 91963, 93747, 13438, 86940, 78078, 83063, 53946, 30621, 41232, 40363, 77544, 711, 85845, 27183, 603, 64992, 39447, 17196, 44165, 83963, 99574, 41572, 55056, 82593, 4356, 81364, 68066, 7228, 76200, 17246, 58861, 29601, 32732, 41747, 74995, 43256, 73931, 34970, 49797, 20645, 20101, 33319, 49780, 3000, 12746, 54322, 15284, 56650, 1731, 70938, 37527, 88589, 70532, 40225, 22205, 7785, 10265, 55908, 57221, 53227, 19981, 94519, 64164, 70853, 85176, 99948, 63311, 96896, 93462, 49448, 46777, 87095, 87456, 9058, 63874, 90914, 47748, 49205, 31641, 52915, 85138, 16913, 3843, 72190, 67193, 37224, 38068, 65180, 90747, 43781, 31281, 13355, 93061, 43333, 77770, 87308, 80256, 23992, 88018, 53752, 49137, 16786, 63977, 74350, 89112, 12132, 8833, 59568, 21927, 13176, 4911, 14526, 13921, 47988, 37624, 98698, 27367, 35283, 87399, 56054, 74936, 93912, 32145, 62033, 38265, 35159, 61908, 92841, 63200, 80274, 55094, 39893, 66627, 82219, 40507, 47138, 34125, 54722, 19458, 74374, 86013, 7688, 69997, 75401, 89312, 77515, 31308, 33685, 69097, 84785, 7267, 49124, 79168, 46278, 41306, 8782, 2826, 23842, 21169, 242, 71214, 51730, 96257, 28642, 2573, 55880, 9836, 98169, 68546, 64791, 29195, 55901, 57692, 96606, 60015, 77933, 89953, 23318, 28998, 33574, 78108, 11667, 53748, 9833, 21813, 72790, 83290, 42620, 86332, 10922, 21517, 62528, 86118, 80942, 38272, 61253, 61277, 22669, 55590, 25110, 72183, 78243, 80268, 61035, 43427, 65762, 27224, 39996, 56832, 93615, 93366, 78655, 98285, 70262, 29083, 55488, 29675, 68100, 38312, 36069, 96046, 1974, 21558, 83825, 54222, 91124, 96244, 97387, 56092, 34661, 49244, 44689, 27009, 98494, 84241, 52958, 57741, 81806, 39566, 8384, 19767, 87920, 45031, 93308, 28839, 73845, 20596, 78741, 33169, 82344, 2327, 17996, 99980, 16231, 87657, 21464, 73587, 39525, 37311, 95499, 45482, 82504, 54326, 60332, 59699, 73595, 42069]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 9)) {::} (<a> n =  (<n> 41)) {::} (<b> b =  (<n> 29)) {::} (<c> c =  (<data> (<combo> (<data> (<combo> (<data> (<point> opposite[b]))   (<combine> +)   (<data> (<point> opposite[b]))))   (<combine> +)   (<data> (<combo> (<data> (<point> main[b]))   (<combine> *)   (<data> (<point> opposite[b]))))))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 10000) :{:x =  (<expr> (x +  (<const> 0.7) )) :})) {::} (<code> (<index> index =  (<n> 37)) {::} (<a> n =  (<n> 5)) {::} (<b> b =  (<n> 12)) {::} (<c> c =  (<data> (<combo> (<data> (<point> main[ (<n> 18) ]))   (<combine> +)   (<data> (<n_avg> (<mainPartial> sum(main[-index:]))))))) {::} (<if> if c  (<eval> >)   (<data> (<point> opposite[b])) :{:x =  (<expr> (x -  (<const> 0.4) )) :}) {::} (<code> (<index> index =  (<n> 35)) {::} (<a> n =  (<n> 35)) {::} (<b> b =  (<n> 19)) {::} (<c> c =  (<data> (<combo> (<data> (<point> opposite[b]))   (<combine> -)   (<data> (<point> main[b]))))) {::} (<if> if c  (<eval> <)   (<data> (<n_avg> (<mainPartial> sum(main[-index:])))) :{:x =  (<expr> (x -  (<const> 0.2) )) :}) {::} (<code> (<index> index =  (<n> 32)) {::} (<a> n =  (<n> 37)) {::} (<b> b =  (<n> 12)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if c  (<eval> <)   (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:])))) :{:x =  (<expr> (<const> 0.6)) :}) {::} (<code> (<index> index =  (<n> 37)) {::} (<a> n =  (<n> 21)) {::} (<b> b =  (<n> 25)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> opposite[ (<n> 45) ])  <  (<point> opposite[ (<n> 19) ])  +  (<d> 5) :{:x =  (<expr> (x *  (<const> 0.5) )) :})) {::} (<code> (<index> index =  (<n> 21)) {::} (<a> n =  (<n> 24)) {::} (<b> b =  (<n> 42)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if c  (<eval> <)   (<data> (<point> main[b])) :{:x =  (<expr> (x *  (<const> 0.5) )) :})) {::} (<code> (<index> index =  (<n> 41)) {::} (<a> n =  (<n> 26)) {::} (<b> b =  (<n> 41)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> <)   (<data> (<point> main[b])) :{:x =  (<expr> (<const> 0.2)) :})))) {::} (<code> (<index> index =  (<n> 26)) {::} (<a> n =  (<n> 10)) {::} (<b> b =  (<n> 35)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[:-index]))))) {::} (<if> if  (<point> opposite[b])  <  (<point> main[ (<n> 16) ])  +  (<d> 7) :{:x =  (<expr> (x *  (<const> 0.8) )) :}) {::} (<code> (<index> index =  (<n> 25)) {::} (<a> n =  (<n> 26)) {::} (<b> b =  (<n> 13)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))) {::} (<if> if  (<point> opposite[b])  >  (<point> main[ (<n> 32) ])  +  (<d> 5) :{:x =  (<expr> (<const> 0.9)) :}) {::} (<code> (<index> index =  (<n> 46)) {::} (<a> n =  (<n> 11)) {::} (<b> b =  (<n> 35)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> opposite[b])  <  (<point> opposite[ (<n> 31) ])  +  (<d> 7) :{:x =  (<expr> (x +  (<const> 0.5) )) :})) {::} (<code> (<index> index =  (<n> 29)) {::} (<a> n =  (<n> 10)) {::} (<b> b =  (<n> 39)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> main[b])  >  (<point> opposite[ (<n> 18) ])  +  (<d> 6) :{:x =  (<expr> (x /  (<const> 0.8) )) :})))) {::} (<code> (<index> index =  (<n> 17)) {::} (<a> n =  (<n> 13)) {::} (<b> b =  (<n> 32)) {::} (<c> c =  (<data> (<combo> (<data> (<point> opposite[b]))   (<combine> -)   (<data> (<point> opposite[b]))))) {::} (<if> if  (<point> opposite[ (<n> 46) ])  >  (<point> opposite[b])  +  (<d> 2) :{:x =  (<expr> (x /  (<const> 0.8) )) :}) {::} (<code> (<index> index =  (<n> 32)) {::} (<a> n =  (<n> 50)) {::} (<b> b =  (<n> 18)) {::} (<c> c =  (<data> (<n_avg> (<oppositePartial> sum(opposite[-index:]))))) {::} (<if> (<compareSum> if abs( (<mainPartial> sum(main[:-index]))  -  (<oppositePartial> sum(opposite[:-index])) ) >  (<smaller> 50) :{:x =  (<expr> (x /  (<const> 0.9) )) :})) {::} (<code> (<index> index =  (<n> 25)) {::} (<a> n =  (<n> 40)) {::} (<b> b =  (<n> 16)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> main[ (<n> 8) ])  >  (<point> main[ (<n> 35) ])  +  (<d> 1) :{:x =  (<expr> (x -  (<const> 0.1) )) :})) {::} (<code> (<index> index =  (<n> 2)) {::} (<a> n =  (<n> 29)) {::} (<b> b =  (<n> 15)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<data> (<point> main[b]))   (<eval> >)   (<data> (<point> opposite[b])) :{:x =  (<expr> (<const> 0.4)) :}))) {::} (<code> (<index> index =  (<n> 21)) {::} (<a> n =  (<n> 22)) {::} (<b> b =  (<n> 22)) {::} (<c> c =  (<data> (<point> main[ (<n> 21) ]))) {::} (<if> if  (<point> opposite[b])  <  (<point> opposite[ (<n> 41) ])  +  (<d> 1) :{:x =  (<expr> (x *  (<const> 0.2) )) :}) {::} (<code> (<index> index =  (<n> 15)) {::} (<a> n =  (<n> 49)) {::} (<b> b =  (<n> 10)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> opposite[ (<n> 12) ])  <  (<point> opposite[ (<n> 44) ])  +  (<d> 1) :{:x =  (<expr> (x *  (<const> 0.6) )) :})) {::} (<code> (<index> index =  (<n> 7)) {::} (<a> n =  (<n> 48)) {::} (<b> b =  (<n> 27)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> main[b])  <  (<point> opposite[ (<n> 35) ])  +  (<d> 6) :{:x =  (<expr> (x *  (<const> 0.8) )) :}))))) {::} (<code> (<index> index =  (<n> 26)) {::} (<a> n =  (<n> 9)) {::} (<b> b =  (<n> 6)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 10000) :{:x =  (<expr> (x -  (<const> 0.7) )) :})))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9735776688685276, 0.9700545545153997]