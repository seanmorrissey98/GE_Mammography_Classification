Generation:
9

Phenotype:
def p():
  x = 0.0
  index = 13
  n = 44
  b = 29
  c = opposite[b]
  if abs(sum(main) - sum(opposite)) > 1000:
    x = 0.3
  index = 0
  n = 37
  b = 28
  c = opposite[b]
  if opposite[39] > opposite[33] + 9:
    x = (x / 0.4)
  index = 25
  n = 27
  b = 8
  c = main[b]
  if c > main[b]:
    x = (x + 0.3)
  index = 38
  n = 31
  b = 45
  c = main[b]
  if opposite[b] < opposite[42] + 0:
    x = (x / 0.5)
  return x
XXX_output_XXX = p()

Genotype:
[49710, 27052, 55564, 64023, 53400, 82746, 16401, 1224, 8559, 51051, 43292, 57679, 25987, 92270, 32975, 64685, 35537, 14283, 31252, 30229, 29390, 71191, 86405, 32929, 14148, 66924, 11656, 31735, 89802, 22953, 61586, 43885, 24745, 40157, 94275, 60171, 28662, 28843, 84694, 92964, 11504, 12534, 54313, 70929, 76424, 47366, 43517, 87819, 56094, 80970, 8721, 52826, 88822, 39250, 7422, 31004, 45549, 77204, 37141, 54290, 29612, 52102, 81225, 42484, 9239, 38582, 94197, 71844, 49226, 17784, 86734, 39328, 99655, 21308, 71690, 31426, 10533, 7181, 72269, 75490, 74321, 58609, 55959, 57324, 30592, 71793, 21234, 64308, 49727, 79498, 62240, 75185, 41344, 25164, 40299, 40730, 84619, 56852, 52078, 3378, 77411, 58245, 56215]
Tree:
(<p> (<defp> def p():{:x = 0.0{::} (<code> (<index> index =  (<n> 13)) {::} (<a> n =  (<n> 44)) {::} (<b> b =  (<n> 29)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> (<compareSum> if abs(sum(main) - sum(opposite)) >  (<larger> 1000) :{:x =  (<expr> (<const> 0.3)) :})) {::} (<code> (<index> index =  (<n> 0)) {::} (<a> n =  (<n> 37)) {::} (<b> b =  (<n> 28)) {::} (<c> c =  (<data> (<point> opposite[b]))) {::} (<if> if  (<point> opposite[ (<n> 39) ])  >  (<point> opposite[ (<n> 33) ])  +  (<d> 9) :{:x =  (<expr> (x /  (<const> 0.4) )) :})) {::} (<code> (<index> index =  (<n> 25)) {::} (<a> n =  (<n> 27)) {::} (<b> b =  (<n> 8)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if c  (<eval> >)   (<data> (<point> main[b])) :{:x =  (<expr> (x +  (<const> 0.3) )) :})) {::} (<code> (<index> index =  (<n> 38)) {::} (<a> n =  (<n> 31)) {::} (<b> b =  (<n> 45)) {::} (<c> c =  (<data> (<point> main[b]))) {::} (<if> if  (<point> opposite[b])  <  (<point> opposite[ (<n> 42) ])  +  (<d> 0) :{:x =  (<expr> (x /  (<const> 0.5) )) :}))) {::}return x:}) {::} (<callp> XXX_output_XXX = p()))

Fitness:
[0.9927551672704027, 0.6224762989834096]